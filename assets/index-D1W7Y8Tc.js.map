{"version":3,"file":"index-D1W7Y8Tc.js","sources":["../../src/connection.js","../../src/Coin.js","../../src/constants.js","../../src/Level.js","../../src/Line.js","../../src/LevelSetupFunction.js","../../src/utils.js","../../src/Player.js","../../src/sketch.js"],"sourcesContent":["const getRandomId = () =>\n  new Date().getTime().toString(36) + Math.random().toString(36).slice(2);\n\nclass ClientConnection {\n  #wsConnection = null;\n  #clientId = null;\n  #sessionId = null;\n  connected = false;\n\n  constructor({\n    onSessionJoin,\n    onSessionQuit,\n    onConnected,\n    onDisconnected,\n    onActionReceive,\n  } = {}) {\n    if (!this.#wsConnection) {\n      this.#wsConnection = new WebSocket(import.meta.env.VITE_WS_URL);\n    }\n\n    // this.#clientId = getRandomId();\n\n    this.onConnected = onConnected;\n    this.onSessionJoin = onSessionJoin;\n    this.onSessionQuit = onSessionQuit;\n    this.onActionReceive = onActionReceive;\n\n    this.init();\n  }\n\n  init() {\n    const conn = this.#wsConnection;\n\n    if (!conn) {\n      throw new Error(\"no ws connection\");\n    }\n\n    conn.onopen = () => {\n      console.log(\"connected to server\");\n      this.connected = true;\n      this.onConnected?.(this);\n    };\n    conn.onclose = () => {\n      this.connected = false;\n      this.#clientId = null;\n      this.#wsConnection = null;\n      console.log(\"Disconnected from server\");\n      this.onSessionQuit?.();\n    };\n    conn.onerror = (error) => {\n      this.connected = false;\n      console.log(`ws error: ${error}`);\n    };\n    conn.onmessage = (event) => {\n      const msg = JSON.parse(event.data);\n\n      if (msg.Type === \"action\") {\n        this.onActionReceive?.(msg);\n        return;\n      }\n      console.log(\"Message: \");\n      console.log(msg);\n\n      if (msg.Type === \"connect\") {\n        this.#sessionId = msg.SessionId;\n        const type = !this.#clientId ? \"start\" : \"new\";\n        if (type === \"start\" && msg.ClientId) {\n          this.#clientId = msg.ClientId;\n        } else if (this.#clientId === msg.ClientId) {\n          return;\n        }\n\n        this.onSessionJoin?.(this, type, msg);\n      }\n\n      if (msg.Type === \"disconnect\" && msg.ClientId !== this.#clientId) {\n        this.onSessionQuit?.(msg.ClientId);\n      }\n    };\n  }\n\n  reconnect() {\n    const conn = this.#wsConnection;\n    if (conn) {\n      conn.close();\n    }\n    this.#wsConnection = new WebSocket(socketUrl);\n    this.init();\n  }\n\n  send(data) {\n    if (!this.connected) {\n      return;\n    }\n\n    if (typeof data !== \"object\" || Object.keys(data).length < 0) {\n      throw new Error(\"Incorrect message data provided\");\n    }\n\n    this.#wsConnection.send(\n      JSON.stringify({\n        ...data,\n        ClientId: data?.ClientId ?? this.#clientId,\n        SessionId: data?.SessionId ?? this.#sessionId,\n        Type: data.Type ?? \"info\",\n      }),\n    );\n  }\n\n  getClientId() {\n    return this.#clientId;\n  }\n\n  getSessionId() {\n    return this.#sessionId;\n  }\n\n  getIsConnected() {\n    return this.connected;\n  }\n}\n\nexport { ClientConnection };\n","class Coin {\n  constructor(x, y, type = \"reward\") {\n    this.levelNo = 0;\n    this.x = x;\n    this.y = y;\n    this.radius = 50;\n    this.type = type;\n  }\n\n  collidesWithPlayer(playerToCheck) {\n    let playerMidPoint = playerToCheck.currentPos.copy();\n    playerMidPoint.x += playerToCheck.width / 2;\n    playerMidPoint.y += playerToCheck.height / 2;\n    if (\n      window.dist(playerMidPoint.x, playerMidPoint.y, this.x, this.y) <\n      this.radius + playerToCheck.width / 2\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  show() {\n    window.push();\n    if (this.type == \"reward\") {\n      window.fill(255, 150, 0);\n    } else {\n      window.fill(0, 200, 0, 100);\n    }\n    window.noStroke();\n    window.ellipse(this.x, this.y, this.radius * 2);\n    window.pop();\n  }\n}\n\nexport { Coin };\n\n","const GameState = {\n  backgroundImage: null,\n  idleImage: null,\n  squatImage: null,\n  jumpImage: null,\n  oofImage: null,\n  run1Image: null,\n  run2Image: null,\n  run3Image: null,\n  fallenImage: null,\n  width: 0,\n  height: 0,\n  canvas: null,\n\n  player: null,\n  lines: [],\n  backgroundImage: null,\n\n  creatingLines: false,\n\n  idleImage: null,\n  squatImage: null,\n  jumpImage: null,\n  oofImage: null,\n  run1Image: null,\n  run2Image: null,\n  run3Image: null,\n  fallenImage: null,\n  fallImage: null,\n  showingLines: false,\n  showingCoins: false,\n\n  placingPlayer: false,\n  placingCoins: false,\n  playerPlaced: false,\n\n  testingSinglePlayer: true,\n\n  fallSound: null,\n  jumpSound: null,\n  bumpSound: null,\n  landSound: null,\n\n  snowImage: null,\n\n  population: null,\n  levelDrawn: false,\n\n  startingPlayerActions: 5,\n  increaseActionsByAmount: 5,\n  increaseActionsEveryXGenerations: 10,\n  evolationSpeed: 1,\n  font: null,\n  connection: null,\n  joinedPlayers: new Set([]),\n  // Stream client player data to server on connect\n  streamInterval: null,\n  // The name of player\n  playerName: \"\",\n\n  levelNumber: 0,\n  previousFrameRate: 60,\n\n  replayingBestPlayer: false,\n  cloneOfBestPlayer: null,\n\n  mousePos1: null,\n  mousePos2: null,\n  linesString: \"\",\n\n  levelImages: [],\n  levels: [],\n};\n\nconst isDev = import.meta.env.MODE === \"development\";\n\nexport { GameState, isDev };\n","import { GameState } from \"./constants.js\";\n\nclass Level {\n  constructor() {\n    this.levelImage = null;\n    this.lines = [];\n    this.levelNo = 0;\n    this.isBlizzardLevel = false;\n    this.isIceLevel = false;\n    this.coins = [];\n    this.hasProgressionCoins = false;\n  }\n\n  show() {\n    window.push();\n    window.image(this.levelImage, 0, 0);\n    if (GameState.showingLines) {\n      for (let l of GameState.lines) {\n        l.Show();\n      }\n    }\n    if (GameState.showingCoins) {\n      for (let c of this.coins) {\n        c.show();\n      }\n    }\n\n    window.pop();\n  }\n}\n\nexport { Level };\n","class DiagonalCollisionInfo {\n  constructor() {\n    this.collisionPoints = [];\n    this.leftSideOfPlayerCollided = false;\n    this.rightSideOfPlayerCollided = false;\n    this.topSideOfPlayerCollided = false;\n    this.bottomSideOfPlayerCollided = false;\n  }\n}\n\nclass Line {\n  constructor(x1, y1, x2, y2) {\n    this.x1 = x1;\n    this.x2 = x2;\n    this.y1 = y1;\n    this.y2 = y2;\n    this.isHorizontal = y1 === y2;\n    this.isVertical = x1 === x2;\n\n    this.isDiagonal = !(this.isHorizontal || this.isVertical);\n    this.ensurePointsAreInOrder();\n\n    this.midPoint = createVector((x1 + x2) / 2, (y1 + y2) / 2);\n\n    this.diagonalCollisionInfo = new DiagonalCollisionInfo();\n  }\n\n  Show() {\n    window.push();\n    window.stroke(255, 0, 0);\n    window.strokeWeight(3);\n    window.line(this.x1, this.y1, this.x2, this.y2);\n    window.ellipse(this.midPoint.x, this.midPoint.y, 10, 10);\n    window.pop();\n  }\n\n  ensurePointsAreInOrder() {\n    if (this.isHorizontal || this.isVertical) {\n      if (this.x1 > this.x2 || this.y1 > this.y2) {\n        let temp = this.x1;\n        this.x1 = this.x2;\n        this.x2 = temp;\n\n        temp = this.y1;\n        this.y1 = this.y2;\n        this.y2 = temp;\n      }\n    }\n  }\n}\n\nexport { Line };\n","import { Coin } from \"./Coin\";\nimport { GameState } from \"./constants\";\nimport { Level } from \"./Level\";\nimport { Line } from \"./Line\";\n\nfunction setupLevels() {\n  let tempLevel = new Level();\n  tempLevel.lines.push(new Line(20, 0, 20, 460));\n  tempLevel.lines.push(new Line(20, 460, 320, 460));\n  tempLevel.lines.push(new Line(320, 460, 320, 820));\n  tempLevel.lines.push(new Line(320, 820, 880, 820));\n  tempLevel.lines.push(new Line(880, 820, 880, 460));\n  tempLevel.lines.push(new Line(880, 460, 1180, 460));\n  tempLevel.lines.push(new Line(1180, 460, 1180, 0));\n  tempLevel.lines.push(new Line(460, 100, 740, 100));\n  tempLevel.lines.push(new Line(460, 100, 460, 220));\n  tempLevel.lines.push(new Line(460, 220, 740, 220));\n  tempLevel.lines.push(new Line(740, 220, 740, 100));\n  // tempLevel.lines.push(new Line(320,260,520, 460));\n  // tempLevel.lines.push(new Line(120,460,320, 260));\n  // tempLevel.lines.push(new Line(680,820,1080,420));\n  GameState.levels.push(tempLevel);\n\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(20, 0, 20, 200));\n  tempLevel.lines.push(new Line(20, 200, 200, 200));\n  tempLevel.lines.push(new Line(200, 200, 200, 420));\n  tempLevel.lines.push(new Line(200, 420, 20, 420));\n  tempLevel.lines.push(new Line(20, 420, 20, 900));\n  tempLevel.lines.push(new Line(1180, 900, 1180, 580));\n  tempLevel.lines.push(new Line(1180, 580, 1020, 580));\n  tempLevel.lines.push(new Line(1020, 580, 1020, 500));\n  tempLevel.lines.push(new Line(1020, 500, 1180, 500));\n  tempLevel.lines.push(new Line(1180, 500, 1180, 0));\n  tempLevel.lines.push(new Line(740, 740, 980, 740));\n  tempLevel.lines.push(new Line(980, 740, 980, 820));\n  tempLevel.lines.push(new Line(980, 820, 740, 820));\n  tempLevel.lines.push(new Line(740, 820, 740, 740));\n  tempLevel.lines.push(new Line(640, 500, 640, 580));\n  tempLevel.lines.push(new Line(640, 580, 820, 580));\n  tempLevel.lines.push(new Line(820, 580, 820, 500));\n  tempLevel.lines.push(new Line(820, 500, 640, 500));\n  tempLevel.lines.push(new Line(300, 260, 300, 420));\n  tempLevel.lines.push(new Line(300, 420, 480, 420));\n  tempLevel.lines.push(new Line(480, 420, 480, 260));\n  tempLevel.lines.push(new Line(480, 260, 300, 260));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(20, 0, 20, 240));\n  tempLevel.lines.push(new Line(20, 240, 160, 240));\n  tempLevel.lines.push(new Line(160, 240, 160, 280));\n  tempLevel.lines.push(new Line(160, 280, 20, 280));\n  tempLevel.lines.push(new Line(20, 280, 20, 900));\n  tempLevel.lines.push(new Line(340, 0, 340, 40));\n  tempLevel.lines.push(new Line(340, 40, 520, 40));\n  tempLevel.lines.push(new Line(520, 40, 520, 0));\n  tempLevel.lines.push(new Line(400, 420, 400, 300));\n  tempLevel.lines.push(new Line(400, 300, 540, 300));\n  tempLevel.lines.push(new Line(540, 300, 540, 420));\n  tempLevel.lines.push(new Line(540, 420, 400, 420));\n  tempLevel.lines.push(new Line(520, 760, 520, 800));\n  tempLevel.lines.push(new Line(520, 800, 640, 800));\n  tempLevel.lines.push(new Line(640, 800, 640, 760));\n  tempLevel.lines.push(new Line(640, 760, 520, 760));\n  tempLevel.lines.push(new Line(800, 760, 800, 800));\n  tempLevel.lines.push(new Line(800, 800, 940, 800));\n  tempLevel.lines.push(new Line(940, 800, 940, 760));\n  tempLevel.lines.push(new Line(940, 760, 800, 760));\n  tempLevel.lines.push(new Line(1180, 900, 1180, 680));\n  tempLevel.lines.push(new Line(1180, 680, 1060, 680));\n  tempLevel.lines.push(new Line(1060, 680, 1060, 640));\n  tempLevel.lines.push(new Line(1060, 640, 1180, 640));\n  tempLevel.lines.push(new Line(1180, 640, 1180, 0));\n  tempLevel.lines.push(new Line(480, 560, 480, 640));\n  tempLevel.lines.push(new Line(480, 640, 840, 640));\n  tempLevel.lines.push(new Line(840, 640, 840, 520));\n  tempLevel.lines.push(new Line(840, 520, 720, 520));\n  tempLevel.lines.push(new Line(720, 520, 720, 560));\n  tempLevel.lines.push(new Line(720, 560, 480, 560));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(20, 0, 20, 540));\n  tempLevel.lines.push(new Line(20, 540, 160, 540));\n  tempLevel.lines.push(new Line(160, 540, 160, 580));\n  tempLevel.lines.push(new Line(160, 580, 20, 580));\n  tempLevel.lines.push(new Line(20, 580, 20, 900));\n  tempLevel.lines.push(new Line(340, 900, 340, 800));\n  tempLevel.lines.push(new Line(340, 800, 520, 800));\n  tempLevel.lines.push(new Line(520, 800, 520, 900));\n  tempLevel.lines.push(new Line(1180, 0, 1180, 320));\n  tempLevel.lines.push(new Line(1180, 320, 1080, 320));\n  tempLevel.lines.push(new Line(1080, 320, 1080, 360));\n  tempLevel.lines.push(new Line(1080, 360, 1180, 360));\n  tempLevel.lines.push(new Line(1180, 360, 1180, 900));\n  tempLevel.lines.push(new Line(340, 0, 340, 420));\n  tempLevel.lines.push(new Line(340, 420, 440, 420));\n  tempLevel.lines.push(new Line(440, 420, 440, 220));\n  tempLevel.lines.push(new Line(440, 220, 380, 220));\n  tempLevel.lines.push(new Line(380, 220, 380, 0));\n  tempLevel.lines.push(new Line(340, 540, 340, 580));\n  tempLevel.lines.push(new Line(340, 580, 520, 580));\n  tempLevel.lines.push(new Line(520, 580, 520, 540));\n  tempLevel.lines.push(new Line(520, 540, 340, 540));\n  tempLevel.lines.push(new Line(740, 400, 740, 580));\n  tempLevel.lines.push(new Line(740, 580, 860, 580));\n  tempLevel.lines.push(new Line(860, 580, 860, 220));\n  tempLevel.lines.push(new Line(860, 220, 1000, 220));\n  tempLevel.lines.push(new Line(1000, 220, 1000, 180));\n  tempLevel.lines.push(new Line(1000, 180, 820, 180));\n  tempLevel.lines.push(new Line(820, 180, 820, 400));\n  tempLevel.lines.push(new Line(820, 400, 740, 400));\n  tempLevel.lines.push(new Line(820, 0, 820, 40));\n  tempLevel.lines.push(new Line(820, 40, 860, 40));\n  tempLevel.lines.push(new Line(860, 40, 860, 0));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(20, 900, 20, 640));\n  tempLevel.lines.push(new Line(20, 640, 100, 640));\n  tempLevel.lines.push(new Line(100, 640, 100, 600));\n  tempLevel.lines.push(new Line(100, 600, 20, 600));\n  tempLevel.lines.push(new Line(20, 600, 20, 0));\n  tempLevel.lines.push(new Line(380, 900, 380, 780));\n  tempLevel.lines.push(new Line(380, 780, 280, 780));\n  tempLevel.lines.push(new Line(280, 780, 280, 820));\n  tempLevel.lines.push(new Line(280, 820, 340, 820));\n  tempLevel.lines.push(new Line(340, 820, 340, 900));\n  tempLevel.lines.push(new Line(820, 900, 820, 780));\n  tempLevel.lines.push(new Line(820, 780, 920, 780));\n  tempLevel.lines.push(new Line(920, 780, 920, 820));\n  tempLevel.lines.push(new Line(920, 820, 860, 820));\n  tempLevel.lines.push(new Line(860, 820, 860, 900));\n  tempLevel.lines.push(new Line(1180, 900, 1180, 460));\n  tempLevel.lines.push(new Line(1180, 460, 1100, 460));\n  tempLevel.lines.push(new Line(1100, 460, 1100, 400));\n  tempLevel.lines.push(new Line(1100, 400, 1180, 400));\n  tempLevel.lines.push(new Line(1180, 400, 1180, 0));\n  tempLevel.lines.push(new Line(920, 640, 820, 640));\n  tempLevel.lines.push(new Line(820, 640, 820, 600));\n  tempLevel.lines.push(new Line(820, 600, 920, 600));\n  tempLevel.lines.push(new Line(920, 600, 920, 640));\n  tempLevel.lines.push(new Line(100, 220, 100, 260));\n  tempLevel.lines.push(new Line(100, 260, 180, 260));\n  tempLevel.lines.push(new Line(180, 260, 180, 220));\n  tempLevel.lines.push(new Line(180, 220, 100, 220));\n  tempLevel.lines.push(new Line(800, 220, 800, 260));\n  tempLevel.lines.push(new Line(800, 260, 720, 260));\n  tempLevel.lines.push(new Line(720, 260, 720, 220));\n  tempLevel.lines.push(new Line(720, 220, 800, 220));\n  tempLevel.lines.push(new Line(560, 180, 560, 220));\n  tempLevel.lines.push(new Line(560, 220, 640, 220));\n  tempLevel.lines.push(new Line(640, 220, 640, 180));\n  tempLevel.lines.push(new Line(640, 180, 560, 180));\n  tempLevel.lines.push(new Line(400, 140, 400, 180));\n  tempLevel.lines.push(new Line(400, 180, 480, 180));\n  tempLevel.lines.push(new Line(480, 180, 480, 140));\n  tempLevel.lines.push(new Line(480, 140, 400, 140));\n  tempLevel.lines.push(new Line(380, 0, 380, 40));\n  tempLevel.lines.push(new Line(380, 40, 820, 40));\n  tempLevel.lines.push(new Line(820, 40, 820, 0));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(20, 900, 20, 500));\n  tempLevel.lines.push(new Line(20, 500, 140, 500));\n  tempLevel.lines.push(new Line(140, 500, 140, 460));\n  tempLevel.lines.push(new Line(140, 460, 20, 460));\n  tempLevel.lines.push(new Line(20, 460, 20, 40));\n  tempLevel.lines.push(new Line(20, 40, 340, 40));\n  tempLevel.lines.push(new Line(340, 40, 340, 140));\n  tempLevel.lines.push(new Line(340, 140, 480, 140));\n  tempLevel.lines.push(new Line(480, 140, 480, 0));\n  tempLevel.lines.push(new Line(480, 280, 480, 320));\n  tempLevel.lines.push(new Line(480, 320, 200, 320));\n  tempLevel.lines.push(new Line(200, 320, 200, 220));\n  tempLevel.lines.push(new Line(200, 220, 140, 220));\n  tempLevel.lines.push(new Line(140, 220, 140, 180));\n  tempLevel.lines.push(new Line(140, 180, 240, 180));\n  tempLevel.lines.push(new Line(240, 180, 240, 280));\n  tempLevel.lines.push(new Line(240, 280, 480, 280));\n  tempLevel.lines.push(new Line(320, 600, 320, 640));\n  tempLevel.lines.push(new Line(320, 640, 440, 640));\n  tempLevel.lines.push(new Line(440, 640, 440, 600));\n  tempLevel.lines.push(new Line(440, 600, 320, 600));\n  tempLevel.lines.push(new Line(820, 900, 820, 820));\n  tempLevel.lines.push(new Line(820, 820, 380, 820));\n  tempLevel.lines.push(new Line(380, 820, 380, 900));\n  tempLevel.lines.push(new Line(1180, 900, 1180, 640));\n  tempLevel.lines.push(new Line(1180, 640, 720, 640));\n  tempLevel.lines.push(new Line(720, 640, 720, 200));\n  tempLevel.lines.push(new Line(720, 200, 1180, 200));\n  tempLevel.lines.push(new Line(1180, 200, 1180, 0));\n  tempLevel.lines.push(new Line(1060, 0, 1060, 100));\n  tempLevel.lines.push(new Line(1060, 100, 820, 100));\n  tempLevel.lines.push(new Line(820, 100, 820, 60));\n  tempLevel.lines.push(new Line(820, 60, 720, 60));\n  tempLevel.lines.push(new Line(720, 60, 720, 0));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(1180, 900, 1180, 340));\n  tempLevel.lines.push(new Line(1180, 340, 960, 340));\n  tempLevel.lines.push(new Line(960, 340, 960, 400));\n  tempLevel.lines.push(new Line(960, 400, 720, 400));\n  tempLevel.lines.push(new Line(720, 400, 720, 280));\n  tempLevel.lines.push(new Line(960, 0, 960, 40));\n  tempLevel.lines.push(new Line(960, 40, 720, 280));\n  tempLevel.lines.push(new Line(740, 0, 740, 40));\n  tempLevel.lines.push(new Line(740, 40, 580, 200));\n  tempLevel.lines.push(new Line(580, 200, 580, 400));\n  tempLevel.lines.push(new Line(580, 400, 480, 400));\n  tempLevel.lines.push(new Line(480, 400, 480, 480));\n  tempLevel.lines.push(new Line(480, 480, 380, 480));\n  tempLevel.lines.push(new Line(380, 480, 380, 260));\n  tempLevel.lines.push(new Line(380, 260, 260, 260));\n  tempLevel.lines.push(new Line(260, 260, 260, 180));\n  tempLevel.lines.push(new Line(260, 180, 320, 120));\n  tempLevel.lines.push(new Line(320, 120, 380, 120));\n  tempLevel.lines.push(new Line(380, 120, 380, 0));\n  tempLevel.lines.push(new Line(220, 0, 220, 40));\n  tempLevel.lines.push(new Line(220, 40, 20, 40));\n  tempLevel.lines.push(new Line(20, 40, 20, 420));\n  tempLevel.lines.push(new Line(20, 420, 80, 420));\n  tempLevel.lines.push(new Line(80, 420, 260, 600));\n  tempLevel.lines.push(new Line(260, 600, 260, 680));\n  tempLevel.lines.push(new Line(260, 680, 480, 900));\n  tempLevel.lines.push(new Line(720, 900, 720, 520));\n  tempLevel.lines.push(new Line(720, 520, 1060, 520));\n  tempLevel.lines.push(new Line(1060, 520, 1060, 560));\n  tempLevel.lines.push(new Line(1060, 560, 920, 560));\n  tempLevel.lines.push(new Line(920, 560, 920, 860));\n  tempLevel.lines.push(new Line(920, 860, 1060, 860));\n  tempLevel.lines.push(new Line(1060, 860, 1060, 900));\n  tempLevel.lines.push(new Line(340, 600, 340, 620));\n  tempLevel.lines.push(new Line(340, 620, 460, 740));\n  tempLevel.lines.push(new Line(460, 740, 480, 740));\n  tempLevel.lines.push(new Line(480, 740, 480, 640));\n  tempLevel.lines.push(new Line(480, 640, 520, 640));\n  tempLevel.lines.push(new Line(520, 640, 520, 600));\n  tempLevel.lines.push(new Line(520, 600, 340, 600));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(20, 0, 20, 160));\n  tempLevel.lines.push(new Line(20, 160, 80, 160));\n  tempLevel.lines.push(new Line(80, 160, 80, 360));\n  tempLevel.lines.push(new Line(80, 360, 620, 360));\n  tempLevel.lines.push(new Line(620, 360, 620, 460));\n  tempLevel.lines.push(new Line(620, 460, 180, 460));\n  tempLevel.lines.push(new Line(180, 460, 180, 640));\n  tempLevel.lines.push(new Line(180, 640, 60, 640));\n  tempLevel.lines.push(new Line(60, 640, 60, 860));\n  tempLevel.lines.push(new Line(60, 860, 220, 860));\n  tempLevel.lines.push(new Line(220, 860, 220, 900));\n  tempLevel.lines.push(new Line(380, 900, 380, 600));\n  tempLevel.lines.push(new Line(380, 600, 620, 600));\n  tempLevel.lines.push(new Line(620, 600, 620, 680));\n  tempLevel.lines.push(new Line(740, 900, 740, 800));\n  tempLevel.lines.push(new Line(740, 800, 620, 680));\n  tempLevel.lines.push(new Line(960, 900, 960, 800));\n  tempLevel.lines.push(new Line(960, 800, 1080, 680));\n  tempLevel.lines.push(new Line(1080, 680, 1080, 560));\n  tempLevel.lines.push(new Line(1080, 560, 1180, 560));\n  tempLevel.lines.push(new Line(1180, 560, 1180, 220));\n  tempLevel.lines.push(new Line(1180, 220, 1080, 220));\n  tempLevel.lines.push(new Line(1080, 220, 1080, 0));\n  tempLevel.lines.push(new Line(620, 60, 620, 220));\n  tempLevel.lines.push(new Line(620, 60, 560, 0));\n  tempLevel.lines.push(new Line(620, 220, 220, 220));\n  tempLevel.lines.push(new Line(220, 220, 220, 0));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(20, 900, 20, 480));\n  tempLevel.lines.push(new Line(20, 480, 80, 480));\n  tempLevel.lines.push(new Line(80, 480, 80, 420));\n  tempLevel.lines.push(new Line(80, 420, 20, 420));\n  tempLevel.lines.push(new Line(20, 420, 20, 40));\n  tempLevel.lines.push(new Line(20, 40, 260, 40));\n  tempLevel.lines.push(new Line(260, 40, 260, 0));\n  tempLevel.lines.push(new Line(380, 0, 380, 40));\n  tempLevel.lines.push(new Line(380, 40, 520, 40));\n  tempLevel.lines.push(new Line(520, 40, 520, 340));\n  tempLevel.lines.push(new Line(520, 340, 440, 340));\n  tempLevel.lines.push(new Line(440, 340, 440, 400));\n  tempLevel.lines.push(new Line(440, 400, 640, 400));\n  tempLevel.lines.push(new Line(640, 400, 640, 240));\n  tempLevel.lines.push(new Line(640, 240, 560, 240));\n  tempLevel.lines.push(new Line(560, 240, 560, 0));\n  tempLevel.lines.push(new Line(220, 900, 220, 800));\n  tempLevel.lines.push(new Line(220, 800, 160, 800));\n  tempLevel.lines.push(new Line(160, 800, 160, 740));\n  tempLevel.lines.push(new Line(160, 740, 220, 740));\n  tempLevel.lines.push(new Line(220, 740, 220, 220));\n  tempLevel.lines.push(new Line(220, 220, 260, 220));\n  tempLevel.lines.push(new Line(260, 220, 260, 520));\n  tempLevel.lines.push(new Line(260, 520, 340, 520));\n  tempLevel.lines.push(new Line(340, 520, 340, 680));\n  tempLevel.lines.push(new Line(340, 680, 560, 900));\n  tempLevel.lines.push(new Line(1080, 900, 1180, 800));\n  tempLevel.lines.push(new Line(1180, 800, 1180, 40));\n  tempLevel.lines.push(new Line(1180, 40, 980, 40));\n  tempLevel.lines.push(new Line(980, 40, 980, 0));\n  tempLevel.lines.push(new Line(500, 520, 500, 680));\n  tempLevel.lines.push(new Line(500, 680, 580, 680));\n  tempLevel.lines.push(new Line(580, 680, 580, 520));\n  tempLevel.lines.push(new Line(580, 520, 500, 520));\n  tempLevel.lines.push(new Line(740, 520, 740, 680));\n  tempLevel.lines.push(new Line(740, 680, 820, 680));\n  tempLevel.lines.push(new Line(820, 680, 820, 520));\n  tempLevel.lines.push(new Line(820, 520, 740, 520));\n  tempLevel.lines.push(new Line(980, 520, 980, 680));\n  tempLevel.lines.push(new Line(980, 680, 1060, 680));\n  tempLevel.lines.push(new Line(1060, 680, 1060, 520));\n  tempLevel.lines.push(new Line(1060, 520, 980, 520));\n  tempLevel.lines.push(new Line(980, 240, 980, 320));\n  tempLevel.lines.push(new Line(980, 320, 1060, 320));\n  tempLevel.lines.push(new Line(1060, 320, 1060, 240));\n  tempLevel.lines.push(new Line(1060, 240, 980, 240));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(20, 0, 20, 460));\n  tempLevel.lines.push(new Line(20, 460, 140, 460));\n  tempLevel.lines.push(new Line(140, 460, 140, 700));\n  tempLevel.lines.push(new Line(140, 700, 260, 820));\n  tempLevel.lines.push(new Line(260, 820, 260, 900));\n  tempLevel.lines.push(new Line(380, 900, 380, 580));\n  tempLevel.lines.push(new Line(380, 580, 560, 580));\n  tempLevel.lines.push(new Line(560, 580, 560, 900));\n  tempLevel.lines.push(new Line(980, 900, 980, 820));\n  tempLevel.lines.push(new Line(980, 820, 1180, 820));\n  tempLevel.lines.push(new Line(1180, 820, 1180, 340));\n  tempLevel.lines.push(new Line(1180, 340, 380, 340));\n  tempLevel.lines.push(new Line(380, 340, 380, 260));\n  tempLevel.lines.push(new Line(380, 260, 500, 260));\n  tempLevel.lines.push(new Line(500, 260, 500, 300));\n  tempLevel.lines.push(new Line(500, 300, 620, 300));\n  tempLevel.lines.push(new Line(620, 300, 620, 220));\n  tempLevel.lines.push(new Line(620, 220, 740, 220));\n  tempLevel.lines.push(new Line(740, 220, 740, 300));\n  tempLevel.lines.push(new Line(740, 300, 860, 300));\n  tempLevel.lines.push(new Line(860, 300, 860, 240));\n  tempLevel.lines.push(new Line(860, 240, 980, 240));\n  tempLevel.lines.push(new Line(980, 240, 980, 300));\n  tempLevel.lines.push(new Line(980, 300, 1100, 300));\n  tempLevel.lines.push(new Line(1100, 300, 1100, 220));\n  tempLevel.lines.push(new Line(1100, 220, 1180, 220));\n  tempLevel.lines.push(new Line(1180, 220, 1180, 0));\n  tempLevel.lines.push(new Line(980, 0, 980, 120));\n  tempLevel.lines.push(new Line(980, 120, 860, 120));\n  tempLevel.lines.push(new Line(860, 120, 860, 0));\n  tempLevel.lines.push(new Line(740, 0, 740, 120));\n  tempLevel.lines.push(new Line(740, 120, 620, 120));\n  tempLevel.lines.push(new Line(620, 120, 620, 0));\n  tempLevel.lines.push(new Line(500, 0, 500, 120));\n  tempLevel.lines.push(new Line(500, 120, 380, 120));\n  tempLevel.lines.push(new Line(380, 120, 380, 0));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(20, 900, 20, 560));\n  tempLevel.lines.push(new Line(20, 560, 100, 560));\n  tempLevel.lines.push(new Line(100, 560, 100, 520));\n  tempLevel.lines.push(new Line(100, 520, 20, 520));\n  tempLevel.lines.push(new Line(20, 520, 20, 360));\n  tempLevel.lines.push(new Line(20, 360, 140, 360));\n  tempLevel.lines.push(new Line(140, 360, 80, 300));\n  tempLevel.lines.push(new Line(80, 300, 20, 300));\n  tempLevel.lines.push(new Line(20, 300, 20, 0));\n  tempLevel.lines.push(new Line(380, 900, 380, 600));\n  tempLevel.lines.push(new Line(380, 600, 500, 600));\n  tempLevel.lines.push(new Line(500, 600, 500, 900));\n  tempLevel.lines.push(new Line(620, 900, 620, 800));\n  tempLevel.lines.push(new Line(620, 800, 740, 800));\n  tempLevel.lines.push(new Line(740, 800, 740, 900));\n  tempLevel.lines.push(new Line(860, 900, 860, 860));\n  tempLevel.lines.push(new Line(860, 860, 980, 860));\n  tempLevel.lines.push(new Line(980, 860, 980, 900));\n  tempLevel.lines.push(new Line(1180, 900, 1180, 400));\n  tempLevel.lines.push(new Line(1180, 400, 1100, 400));\n  tempLevel.lines.push(new Line(1100, 400, 1100, 320));\n  tempLevel.lines.push(new Line(1100, 320, 1180, 320));\n  tempLevel.lines.push(new Line(1180, 320, 1180, 160));\n  tempLevel.lines.push(new Line(1180, 160, 1100, 160));\n  tempLevel.lines.push(new Line(1100, 160, 1100, 120));\n  tempLevel.lines.push(new Line(1100, 120, 1180, 120));\n  tempLevel.lines.push(new Line(1180, 120, 1180, 0));\n  tempLevel.lines.push(new Line(980, 0, 980, 160));\n  tempLevel.lines.push(new Line(980, 160, 860, 160));\n  tempLevel.lines.push(new Line(860, 160, 860, 0));\n  tempLevel.lines.push(new Line(740, 0, 740, 20));\n  tempLevel.lines.push(new Line(740, 20, 620, 20));\n  tempLevel.lines.push(new Line(620, 20, 620, 0));\n  tempLevel.lines.push(new Line(500, 0, 500, 100));\n  tempLevel.lines.push(new Line(500, 100, 440, 100));\n  tempLevel.lines.push(new Line(440, 100, 440, 200));\n  tempLevel.lines.push(new Line(440, 200, 500, 200));\n  tempLevel.lines.push(new Line(500, 200, 500, 260));\n  tempLevel.lines.push(new Line(500, 260, 380, 260));\n  tempLevel.lines.push(new Line(380, 260, 380, 0));\n  tempLevel.lines.push(new Line(380, 420, 380, 500));\n  tempLevel.lines.push(new Line(380, 500, 500, 500));\n  tempLevel.lines.push(new Line(500, 500, 500, 420));\n  tempLevel.lines.push(new Line(500, 420, 380, 420));\n  tempLevel.lines.push(new Line(620, 600, 620, 680));\n  tempLevel.lines.push(new Line(620, 680, 740, 680));\n  tempLevel.lines.push(new Line(740, 680, 740, 600));\n  tempLevel.lines.push(new Line(740, 600, 620, 600));\n  tempLevel.lines.push(new Line(860, 560, 860, 640));\n  tempLevel.lines.push(new Line(860, 640, 980, 640));\n  tempLevel.lines.push(new Line(980, 640, 980, 560));\n  tempLevel.lines.push(new Line(980, 560, 860, 560));\n  tempLevel.lines.push(new Line(860, 320, 860, 400));\n  tempLevel.lines.push(new Line(860, 400, 980, 400));\n  tempLevel.lines.push(new Line(980, 400, 980, 320));\n  tempLevel.lines.push(new Line(980, 320, 860, 320));\n  tempLevel.lines.push(new Line(620, 120, 620, 160));\n  tempLevel.lines.push(new Line(620, 160, 680, 160));\n  tempLevel.lines.push(new Line(680, 160, 680, 280));\n  tempLevel.lines.push(new Line(680, 280, 620, 280));\n  tempLevel.lines.push(new Line(620, 280, 620, 440));\n  tempLevel.lines.push(new Line(620, 440, 740, 440));\n  tempLevel.lines.push(new Line(740, 440, 740, 120));\n  tempLevel.lines.push(new Line(740, 120, 620, 120));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(20, 900, 20, 580));\n  tempLevel.lines.push(new Line(20, 580, 60, 580));\n  tempLevel.lines.push(new Line(60, 580, 60, 540));\n  tempLevel.lines.push(new Line(60, 540, 20, 540));\n  tempLevel.lines.push(new Line(20, 540, 20, 0));\n  tempLevel.lines.push(new Line(300, 900, 300, 860));\n  tempLevel.lines.push(new Line(300, 860, 380, 860));\n  tempLevel.lines.push(new Line(380, 860, 380, 460));\n  tempLevel.lines.push(new Line(380, 460, 500, 460));\n  tempLevel.lines.push(new Line(500, 460, 500, 900));\n  tempLevel.lines.push(new Line(620, 900, 620, 780));\n  tempLevel.lines.push(new Line(620, 780, 740, 780));\n  tempLevel.lines.push(new Line(740, 780, 740, 900));\n  tempLevel.lines.push(new Line(860, 900, 860, 860));\n  tempLevel.lines.push(new Line(860, 860, 980, 860));\n  tempLevel.lines.push(new Line(980, 860, 980, 900));\n  tempLevel.lines.push(new Line(1180, 900, 1180, 660));\n  tempLevel.lines.push(new Line(1180, 660, 1060, 660));\n  tempLevel.lines.push(new Line(1060, 660, 1060, 580));\n  tempLevel.lines.push(new Line(1060, 580, 1180, 580));\n  tempLevel.lines.push(new Line(1180, 580, 1180, 40));\n  tempLevel.lines.push(new Line(1180, 40, 1040, 40));\n  tempLevel.lines.push(new Line(1040, 40, 1040, 0));\n  tempLevel.lines.push(new Line(380, 340, 380, 200));\n  tempLevel.lines.push(new Line(380, 200, 560, 20));\n  tempLevel.lines.push(new Line(560, 20, 560, 0));\n  tempLevel.lines.push(new Line(380, 340, 500, 340));\n  tempLevel.lines.push(new Line(500, 340, 500, 260));\n  tempLevel.lines.push(new Line(500, 260, 740, 20));\n  tempLevel.lines.push(new Line(740, 20, 740, 0));\n  tempLevel.lines.push(new Line(740, 320, 740, 400));\n  tempLevel.lines.push(new Line(740, 400, 820, 400));\n  tempLevel.lines.push(new Line(820, 400, 820, 320));\n  tempLevel.lines.push(new Line(820, 320, 740, 320));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n\n  tempLevel.lines.push(new Line(20, 900, 20, 0));\n  tempLevel.lines.push(new Line(200, 500, 200, 600));\n  tempLevel.lines.push(new Line(200, 600, 300, 600));\n  tempLevel.lines.push(new Line(300, 600, 300, 500));\n  tempLevel.lines.push(new Line(300, 500, 200, 500));\n  tempLevel.lines.push(new Line(560, 900, 560, 720));\n  tempLevel.lines.push(new Line(560, 720, 520, 720));\n  tempLevel.lines.push(new Line(520, 720, 520, 680));\n  tempLevel.lines.push(new Line(520, 680, 740, 680));\n  tempLevel.lines.push(new Line(740, 680, 740, 900));\n  tempLevel.lines.push(new Line(1040, 900, 1040, 860));\n  tempLevel.lines.push(new Line(1040, 860, 1180, 860));\n  tempLevel.lines.push(new Line(1180, 860, 1180, 160));\n  tempLevel.lines.push(new Line(1180, 160, 1100, 160));\n  tempLevel.lines.push(new Line(1100, 160, 1100, 80));\n  tempLevel.lines.push(new Line(1100, 80, 1180, 80));\n  tempLevel.lines.push(new Line(1180, 80, 1180, 0));\n  tempLevel.lines.push(new Line(560, 0, 560, 40));\n  tempLevel.lines.push(new Line(560, 40, 640, 40));\n  tempLevel.lines.push(new Line(640, 40, 640, 0));\n  tempLevel.lines.push(new Line(560, 240, 560, 480));\n  tempLevel.lines.push(new Line(560, 480, 600, 480));\n  tempLevel.lines.push(new Line(600, 480, 600, 580));\n  tempLevel.lines.push(new Line(600, 580, 640, 580));\n  tempLevel.lines.push(new Line(640, 580, 640, 260));\n  tempLevel.lines.push(new Line(640, 260, 640, 240));\n  tempLevel.lines.push(new Line(640, 240, 560, 240));\n  tempLevel.lines.push(new Line(860, 280, 860, 400));\n  tempLevel.lines.push(new Line(860, 400, 940, 400));\n  tempLevel.lines.push(new Line(940, 400, 940, 280));\n  tempLevel.lines.push(new Line(940, 280, 860, 280));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(560, 900, 560, 700));\n  tempLevel.lines.push(new Line(560, 700, 480, 700));\n  tempLevel.lines.push(new Line(480, 700, 480, 500));\n  tempLevel.lines.push(new Line(480, 500, 540, 500));\n  tempLevel.lines.push(new Line(540, 500, 540, 660));\n  tempLevel.lines.push(new Line(540, 660, 700, 660));\n  tempLevel.lines.push(new Line(700, 660, 700, 760));\n  tempLevel.lines.push(new Line(640, 900, 640, 820));\n  tempLevel.lines.push(new Line(640, 820, 700, 760));\n  tempLevel.lines.push(new Line(1180, 900, 1180, 0));\n  tempLevel.lines.push(new Line(20, 900, 20, 80));\n  tempLevel.lines.push(new Line(20, 80, 400, 80));\n  tempLevel.lines.push(new Line(400, 80, 400, 0));\n  tempLevel.lines.push(new Line(540, 240, 540, 280));\n  tempLevel.lines.push(new Line(540, 280, 700, 280));\n  tempLevel.lines.push(new Line(700, 280, 700, 240));\n  tempLevel.lines.push(new Line(700, 240, 540, 240));\n  tempLevel.lines.push(new Line(900, 340, 900, 380));\n  tempLevel.lines.push(new Line(900, 380, 1060, 380));\n  tempLevel.lines.push(new Line(1060, 380, 1060, 340));\n  tempLevel.lines.push(new Line(1060, 340, 900, 340));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(400, 900, 400, 820));\n  tempLevel.lines.push(new Line(400, 820, 20, 820));\n  tempLevel.lines.push(new Line(20, 820, 20, 580));\n  tempLevel.lines.push(new Line(20, 580, 400, 580));\n  tempLevel.lines.push(new Line(400, 580, 400, 560));\n  tempLevel.lines.push(new Line(400, 560, 220, 380));\n  tempLevel.lines.push(new Line(220, 380, 0, 380));\n  tempLevel.lines.push(new Line(0, 280, 220, 280));\n  tempLevel.lines.push(new Line(220, 280, 140, 200));\n  tempLevel.lines.push(new Line(140, 200, 20, 200));\n  tempLevel.lines.push(new Line(20, 200, 20, 60));\n  tempLevel.lines.push(new Line(20, 60, 80, 0));\n  tempLevel.lines.push(new Line(1180, 900, 1180, 600));\n  tempLevel.lines.push(new Line(1180, 600, 840, 600));\n  tempLevel.lines.push(new Line(840, 600, 840, 560));\n  tempLevel.lines.push(new Line(840, 560, 960, 560));\n  tempLevel.lines.push(new Line(960, 560, 960, 480));\n  tempLevel.lines.push(new Line(960, 480, 1020, 420));\n  tempLevel.lines.push(new Line(1020, 420, 1180, 420));\n  tempLevel.lines.push(new Line(1180, 420, 1180, 220));\n  tempLevel.lines.push(new Line(1180, 220, 1020, 220));\n  tempLevel.lines.push(new Line(1020, 220, 1020, 200));\n  tempLevel.lines.push(new Line(1020, 200, 1180, 40));\n  tempLevel.lines.push(new Line(1180, 40, 1180, 0));\n  tempLevel.lines.push(new Line(580, 160, 640, 220));\n  tempLevel.lines.push(new Line(640, 220, 640, 340));\n  tempLevel.lines.push(new Line(640, 340, 420, 340));\n  tempLevel.lines.push(new Line(420, 340, 420, 220));\n  tempLevel.lines.push(new Line(420, 220, 480, 160));\n  tempLevel.lines.push(new Line(480, 160, 480, 200));\n  tempLevel.lines.push(new Line(480, 200, 580, 200));\n  tempLevel.lines.push(new Line(580, 200, 580, 160));\n  tempLevel.lines.push(new Line(20, 280, 20, 380));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(80, 900, 160, 820));\n  tempLevel.lines.push(new Line(160, 820, 160, 780));\n  tempLevel.lines.push(new Line(160, 780, 20, 780));\n  tempLevel.lines.push(new Line(20, 780, 20, 440));\n  tempLevel.lines.push(new Line(20, 440, 200, 440));\n  tempLevel.lines.push(new Line(200, 440, 200, 260));\n  tempLevel.lines.push(new Line(200, 260, 140, 200));\n  tempLevel.lines.push(new Line(140, 200, 20, 200));\n  tempLevel.lines.push(new Line(20, 200, 20, 80));\n  tempLevel.lines.push(new Line(20, 80, 140, 80));\n  tempLevel.lines.push(new Line(140, 80, 60, 0));\n  tempLevel.lines.push(new Line(1180, 900, 1180, 0));\n  tempLevel.lines.push(new Line(1000, 0, 1000, 40));\n  tempLevel.lines.push(new Line(1000, 40, 1080, 40));\n  tempLevel.lines.push(new Line(1080, 40, 1080, 0));\n  tempLevel.lines.push(new Line(700, 820, 700, 680));\n  tempLevel.lines.push(new Line(700, 680, 560, 680));\n  tempLevel.lines.push(new Line(560, 680, 560, 720));\n  tempLevel.lines.push(new Line(560, 720, 640, 720));\n  tempLevel.lines.push(new Line(640, 720, 640, 820));\n  tempLevel.lines.push(new Line(640, 820, 700, 820));\n  tempLevel.lines.push(new Line(820, 680, 820, 820));\n  tempLevel.lines.push(new Line(820, 820, 880, 820));\n  tempLevel.lines.push(new Line(880, 820, 880, 680));\n  tempLevel.lines.push(new Line(880, 680, 820, 680));\n  tempLevel.lines.push(new Line(1000, 720, 1000, 820));\n  tempLevel.lines.push(new Line(1000, 820, 1060, 820));\n  tempLevel.lines.push(new Line(1060, 820, 1060, 720));\n  tempLevel.lines.push(new Line(1060, 720, 1000, 720));\n  tempLevel.lines.push(new Line(980, 440, 980, 520));\n  tempLevel.lines.push(new Line(980, 520, 1060, 520));\n  tempLevel.lines.push(new Line(1060, 520, 1060, 440));\n  tempLevel.lines.push(new Line(1060, 440, 980, 440));\n  tempLevel.lines.push(new Line(640, 420, 640, 580));\n  tempLevel.lines.push(new Line(640, 580, 700, 580));\n  tempLevel.lines.push(new Line(700, 580, 700, 280));\n  tempLevel.lines.push(new Line(700, 280, 780, 280));\n  tempLevel.lines.push(new Line(780, 280, 780, 240));\n  tempLevel.lines.push(new Line(780, 240, 580, 240));\n  tempLevel.lines.push(new Line(580, 240, 580, 280));\n  tempLevel.lines.push(new Line(580, 280, 640, 280));\n  tempLevel.lines.push(new Line(640, 280, 640, 380));\n  tempLevel.lines.push(new Line(640, 380, 460, 380));\n  tempLevel.lines.push(new Line(460, 380, 460, 420));\n  tempLevel.lines.push(new Line(460, 420, 640, 420));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(1000, 900, 1000, 780));\n  tempLevel.lines.push(new Line(1000, 780, 1080, 780));\n  tempLevel.lines.push(new Line(1080, 780, 1080, 900));\n  tempLevel.lines.push(new Line(1180, 900, 1180, 460));\n  tempLevel.lines.push(new Line(1180, 460, 1100, 460));\n  tempLevel.lines.push(new Line(1100, 460, 1100, 420));\n  tempLevel.lines.push(new Line(1100, 420, 1180, 420));\n  tempLevel.lines.push(new Line(1180, 420, 1180, 0));\n  tempLevel.lines.push(new Line(60, 900, 20, 860));\n  tempLevel.lines.push(new Line(20, 860, 20, 680));\n  tempLevel.lines.push(new Line(20, 680, 280, 680));\n  tempLevel.lines.push(new Line(280, 680, 280, 640));\n  tempLevel.lines.push(new Line(280, 640, 20, 640));\n  tempLevel.lines.push(new Line(20, 640, 20, 0));\n  tempLevel.lines.push(new Line(240, 0, 240, 120));\n  tempLevel.lines.push(new Line(240, 120, 180, 120));\n  tempLevel.lines.push(new Line(180, 120, 180, 160));\n  tempLevel.lines.push(new Line(180, 160, 120, 160));\n  tempLevel.lines.push(new Line(120, 160, 120, 200));\n  tempLevel.lines.push(new Line(120, 200, 240, 200));\n  tempLevel.lines.push(new Line(240, 200, 240, 420));\n  tempLevel.lines.push(new Line(240, 420, 180, 420));\n  tempLevel.lines.push(new Line(180, 420, 180, 460));\n  tempLevel.lines.push(new Line(180, 460, 120, 460));\n  tempLevel.lines.push(new Line(120, 460, 120, 500));\n  tempLevel.lines.push(new Line(120, 500, 280, 500));\n  tempLevel.lines.push(new Line(280, 500, 280, 0));\n  tempLevel.lines.push(new Line(620, 280, 620, 500));\n  tempLevel.lines.push(new Line(620, 500, 580, 500));\n  tempLevel.lines.push(new Line(580, 500, 580, 320));\n  tempLevel.lines.push(new Line(580, 320, 620, 280));\n  tempLevel.lines.push(new Line(700, 280, 700, 640));\n  tempLevel.lines.push(new Line(700, 640, 580, 640));\n  tempLevel.lines.push(new Line(580, 640, 580, 680));\n  tempLevel.lines.push(new Line(580, 680, 800, 680));\n  tempLevel.lines.push(new Line(800, 680, 800, 560));\n  tempLevel.lines.push(new Line(800, 560, 740, 560));\n  tempLevel.lines.push(new Line(740, 560, 740, 320));\n  tempLevel.lines.push(new Line(740, 320, 700, 280));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(20, 900, 20, 500));\n  tempLevel.lines.push(new Line(20, 500, 0, 500));\n  tempLevel.lines.push(new Line(0, 500, 0, 380));\n  tempLevel.lines.push(new Line(0, 380, 140, 380));\n  tempLevel.lines.push(new Line(140, 380, 140, 340));\n  tempLevel.lines.push(new Line(140, 340, 80, 340));\n  tempLevel.lines.push(new Line(80, 340, 80, 300));\n  tempLevel.lines.push(new Line(80, 300, 20, 300));\n  tempLevel.lines.push(new Line(20, 300, 20, 20));\n  tempLevel.lines.push(new Line(20, 20, 360, 20));\n  tempLevel.lines.push(new Line(360, 20, 360, 240));\n  tempLevel.lines.push(new Line(360, 240, 400, 240));\n  tempLevel.lines.push(new Line(400, 240, 400, 0));\n  tempLevel.lines.push(new Line(400, 340, 280, 340));\n  tempLevel.lines.push(new Line(280, 340, 280, 600));\n  tempLevel.lines.push(new Line(280, 600, 180, 600));\n  tempLevel.lines.push(new Line(180, 600, 180, 740));\n  tempLevel.lines.push(new Line(180, 740, 120, 740));\n  tempLevel.lines.push(new Line(120, 740, 120, 780));\n  tempLevel.lines.push(new Line(120, 780, 240, 780));\n  tempLevel.lines.push(new Line(240, 780, 240, 900));\n  tempLevel.lines.push(new Line(280, 900, 280, 800));\n  tempLevel.lines.push(new Line(280, 800, 360, 800));\n  tempLevel.lines.push(new Line(360, 800, 360, 760));\n  tempLevel.lines.push(new Line(360, 760, 280, 760));\n  tempLevel.lines.push(new Line(280, 760, 280, 640));\n  tempLevel.lines.push(new Line(280, 640, 360, 640));\n  tempLevel.lines.push(new Line(360, 640, 400, 600));\n  tempLevel.lines.push(new Line(400, 600, 400, 340));\n  tempLevel.lines.push(new Line(920, 0, 820, 100));\n  tempLevel.lines.push(new Line(820, 100, 820, 120));\n  tempLevel.lines.push(new Line(820, 120, 860, 120));\n  tempLevel.lines.push(new Line(860, 120, 960, 20));\n  tempLevel.lines.push(new Line(960, 20, 1040, 20));\n  tempLevel.lines.push(new Line(1040, 20, 1040, 0));\n  tempLevel.lines.push(new Line(1020, 200, 820, 200));\n  tempLevel.lines.push(new Line(820, 200, 680, 340));\n  tempLevel.lines.push(new Line(680, 340, 680, 360));\n  tempLevel.lines.push(new Line(680, 360, 720, 360));\n  tempLevel.lines.push(new Line(720, 360, 720, 460));\n  tempLevel.lines.push(new Line(720, 460, 680, 500));\n  tempLevel.lines.push(new Line(680, 500, 680, 520));\n  tempLevel.lines.push(new Line(680, 520, 720, 520));\n  tempLevel.lines.push(new Line(720, 520, 720, 620));\n  tempLevel.lines.push(new Line(720, 620, 760, 620));\n  tempLevel.lines.push(new Line(760, 620, 760, 560));\n  tempLevel.lines.push(new Line(760, 560, 900, 560));\n  tempLevel.lines.push(new Line(900, 560, 900, 520));\n  tempLevel.lines.push(new Line(900, 520, 760, 520));\n  tempLevel.lines.push(new Line(760, 520, 760, 320));\n  tempLevel.lines.push(new Line(760, 320, 840, 240));\n  tempLevel.lines.push(new Line(840, 240, 1020, 240));\n  tempLevel.lines.push(new Line(1020, 240, 1020, 200));\n  tempLevel.lines.push(new Line(1180, 900, 1180, 860));\n  tempLevel.lines.push(new Line(1180, 860, 1120, 860));\n  tempLevel.lines.push(new Line(1120, 860, 1120, 820));\n  tempLevel.lines.push(new Line(1120, 820, 1180, 820));\n  tempLevel.lines.push(new Line(1180, 820, 1180, 0));\n  tempLevel.lines.push(new Line(1120, 360, 1120, 440));\n  tempLevel.lines.push(new Line(1120, 440, 1040, 440));\n  tempLevel.lines.push(new Line(1040, 440, 1040, 360));\n  tempLevel.lines.push(new Line(1040, 360, 1120, 360));\n  tempLevel.lines.push(new Line(940, 620, 1020, 620));\n  tempLevel.lines.push(new Line(1020, 620, 1020, 660));\n  tempLevel.lines.push(new Line(1020, 660, 1060, 660));\n  tempLevel.lines.push(new Line(1060, 660, 1060, 700));\n  tempLevel.lines.push(new Line(1060, 700, 980, 700));\n  tempLevel.lines.push(new Line(980, 700, 980, 660));\n  tempLevel.lines.push(new Line(980, 660, 940, 660));\n  tempLevel.lines.push(new Line(940, 660, 940, 620));\n  tempLevel.lines.push(new Line(620, 700, 620, 740));\n  tempLevel.lines.push(new Line(620, 740, 720, 740));\n  tempLevel.lines.push(new Line(720, 740, 720, 860));\n  tempLevel.lines.push(new Line(720, 860, 1000, 860));\n  tempLevel.lines.push(new Line(1000, 860, 1000, 820));\n  tempLevel.lines.push(new Line(1000, 820, 940, 820));\n  tempLevel.lines.push(new Line(940, 820, 940, 780));\n  tempLevel.lines.push(new Line(940, 780, 880, 780));\n  tempLevel.lines.push(new Line(880, 780, 880, 740));\n  tempLevel.lines.push(new Line(880, 740, 820, 740));\n  tempLevel.lines.push(new Line(820, 740, 820, 700));\n  tempLevel.lines.push(new Line(820, 700, 620, 700));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(920, 900, 940, 880));\n  tempLevel.lines.push(new Line(940, 880, 1000, 880));\n  tempLevel.lines.push(new Line(1000, 880, 1000, 820));\n  tempLevel.lines.push(new Line(1000, 820, 940, 820));\n  tempLevel.lines.push(new Line(940, 820, 980, 780));\n  tempLevel.lines.push(new Line(980, 780, 1040, 780));\n  tempLevel.lines.push(new Line(1040, 780, 1040, 900));\n  tempLevel.lines.push(new Line(1180, 900, 1180, 480));\n  tempLevel.lines.push(new Line(1180, 480, 1080, 480));\n  tempLevel.lines.push(new Line(1080, 480, 1080, 420));\n  tempLevel.lines.push(new Line(1080, 420, 1180, 420));\n  tempLevel.lines.push(new Line(1180, 420, 1180, 0));\n  tempLevel.lines.push(new Line(940, 0, 940, 40));\n  tempLevel.lines.push(new Line(940, 40, 820, 40));\n  tempLevel.lines.push(new Line(820, 40, 820, 0));\n  tempLevel.lines.push(new Line(660, 0, 660, 40));\n  tempLevel.lines.push(new Line(660, 40, 540, 40));\n  tempLevel.lines.push(new Line(540, 40, 540, 0));\n  tempLevel.lines.push(new Line(380, 0, 380, 40));\n  tempLevel.lines.push(new Line(380, 40, 260, 40));\n  tempLevel.lines.push(new Line(260, 40, 260, 0));\n  tempLevel.lines.push(new Line(100, 0, 100, 40));\n  tempLevel.lines.push(new Line(100, 40, 20, 40));\n  tempLevel.lines.push(new Line(20, 40, 20, 640));\n  tempLevel.lines.push(new Line(20, 640, 220, 640));\n  tempLevel.lines.push(new Line(220, 640, 300, 720));\n  tempLevel.lines.push(new Line(300, 720, 280, 720));\n  tempLevel.lines.push(new Line(280, 720, 280, 780));\n  tempLevel.lines.push(new Line(280, 780, 400, 900));\n  tempLevel.lines.push(new Line(600, 560, 600, 620));\n  tempLevel.lines.push(new Line(600, 620, 780, 620));\n  tempLevel.lines.push(new Line(780, 620, 780, 560));\n  tempLevel.lines.push(new Line(780, 560, 600, 560));\n  tempLevel.lines.push(new Line(140, 400, 140, 460));\n  tempLevel.lines.push(new Line(140, 460, 300, 460));\n  tempLevel.lines.push(new Line(300, 460, 240, 400));\n  tempLevel.lines.push(new Line(240, 400, 140, 400));\n  tempLevel.lines.push(new Line(320, 140, 320, 200));\n  tempLevel.lines.push(new Line(320, 200, 440, 200));\n  tempLevel.lines.push(new Line(440, 200, 440, 140));\n  tempLevel.lines.push(new Line(440, 140, 320, 140));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(100, 900, 100, 520));\n  tempLevel.lines.push(new Line(100, 520, 220, 520));\n  tempLevel.lines.push(new Line(220, 520, 220, 460));\n  tempLevel.lines.push(new Line(220, 460, 20, 460));\n  tempLevel.lines.push(new Line(20, 460, 20, 0));\n  tempLevel.lines.push(new Line(120, 260, 120, 340));\n  tempLevel.lines.push(new Line(120, 340, 280, 340));\n  tempLevel.lines.push(new Line(280, 340, 200, 260));\n  tempLevel.lines.push(new Line(200, 260, 120, 260));\n  tempLevel.lines.push(new Line(260, 900, 260, 720));\n  tempLevel.lines.push(new Line(260, 720, 300, 680));\n  tempLevel.lines.push(new Line(300, 680, 380, 680));\n  tempLevel.lines.push(new Line(380, 680, 380, 900));\n  tempLevel.lines.push(new Line(540, 900, 540, 680));\n  tempLevel.lines.push(new Line(540, 680, 660, 680));\n  tempLevel.lines.push(new Line(660, 680, 660, 900));\n  tempLevel.lines.push(new Line(820, 900, 820, 680));\n  tempLevel.lines.push(new Line(820, 680, 840, 680));\n  tempLevel.lines.push(new Line(840, 680, 940, 780));\n  tempLevel.lines.push(new Line(940, 780, 940, 900));\n  tempLevel.lines.push(new Line(1180, 900, 1180, 780));\n  tempLevel.lines.push(new Line(1180, 780, 1100, 780));\n  tempLevel.lines.push(new Line(1100, 780, 1100, 680));\n  tempLevel.lines.push(new Line(1100, 680, 1180, 680));\n  tempLevel.lines.push(new Line(1180, 680, 1180, 520));\n  tempLevel.lines.push(new Line(1180, 520, 980, 520));\n  tempLevel.lines.push(new Line(980, 520, 980, 460));\n  tempLevel.lines.push(new Line(980, 460, 1180, 460));\n  tempLevel.lines.push(new Line(1180, 460, 1180, 0));\n  tempLevel.lines.push(new Line(1020, 220, 1060, 220));\n  tempLevel.lines.push(new Line(1060, 220, 1060, 340));\n  tempLevel.lines.push(new Line(1060, 340, 900, 340));\n  tempLevel.lines.push(new Line(900, 340, 1020, 220));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(20, 900, 20, 740));\n  tempLevel.lines.push(new Line(20, 740, 40, 720));\n  tempLevel.lines.push(new Line(40, 720, 40, 320));\n  tempLevel.lines.push(new Line(40, 320, 260, 100));\n  tempLevel.lines.push(new Line(260, 100, 420, 100));\n  tempLevel.lines.push(new Line(420, 100, 420, 0));\n  tempLevel.lines.push(new Line(720, 0, 720, 40));\n  tempLevel.lines.push(new Line(720, 40, 820, 40));\n  tempLevel.lines.push(new Line(820, 40, 820, 0));\n  tempLevel.lines.push(new Line(1140, 0, 1140, 260));\n  tempLevel.lines.push(new Line(1140, 260, 1080, 260));\n  tempLevel.lines.push(new Line(1080, 260, 1080, 420));\n  tempLevel.lines.push(new Line(1080, 420, 1160, 420));\n  tempLevel.lines.push(new Line(1160, 420, 1160, 800));\n  tempLevel.lines.push(new Line(1160, 800, 1180, 820));\n  tempLevel.lines.push(new Line(1180, 820, 1180, 900));\n  tempLevel.lines.push(new Line(700, 840, 540, 840));\n  tempLevel.lines.push(new Line(540, 840, 540, 720));\n  tempLevel.lines.push(new Line(540, 720, 600, 720));\n  tempLevel.lines.push(new Line(600, 720, 600, 780));\n  tempLevel.lines.push(new Line(600, 780, 700, 780));\n  tempLevel.lines.push(new Line(700, 780, 700, 840));\n  tempLevel.lines.push(new Line(320, 720, 200, 720));\n  tempLevel.lines.push(new Line(200, 720, 200, 580));\n  tempLevel.lines.push(new Line(200, 580, 360, 580));\n  tempLevel.lines.push(new Line(360, 580, 360, 620));\n  tempLevel.lines.push(new Line(360, 620, 320, 620));\n  tempLevel.lines.push(new Line(320, 620, 320, 720));\n  tempLevel.lines.push(new Line(720, 460, 720, 500));\n  tempLevel.lines.push(new Line(720, 500, 760, 500));\n  tempLevel.lines.push(new Line(760, 500, 760, 540));\n  tempLevel.lines.push(new Line(760, 540, 820, 540));\n  tempLevel.lines.push(new Line(820, 540, 820, 460));\n  tempLevel.lines.push(new Line(820, 460, 720, 460));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(420, 900, 420, 840));\n  tempLevel.lines.push(new Line(420, 840, 340, 840));\n  tempLevel.lines.push(new Line(340, 840, 340, 720));\n  tempLevel.lines.push(new Line(340, 720, 420, 720));\n  tempLevel.lines.push(new Line(420, 720, 420, 700));\n  tempLevel.lines.push(new Line(420, 700, 460, 700));\n  tempLevel.lines.push(new Line(460, 700, 340, 580));\n  tempLevel.lines.push(new Line(340, 580, 340, 480));\n  tempLevel.lines.push(new Line(340, 480, 320, 480));\n  tempLevel.lines.push(new Line(320, 480, 320, 580));\n  tempLevel.lines.push(new Line(320, 580, 260, 640));\n  tempLevel.lines.push(new Line(260, 640, 180, 640));\n  tempLevel.lines.push(new Line(180, 640, 120, 580));\n  tempLevel.lines.push(new Line(120, 580, 20, 580));\n  tempLevel.lines.push(new Line(20, 580, 20, 280));\n  tempLevel.lines.push(new Line(20, 280, 160, 280));\n  tempLevel.lines.push(new Line(160, 280, 160, 0));\n  tempLevel.lines.push(new Line(1140, 900, 1140, 700));\n  tempLevel.lines.push(new Line(1140, 700, 680, 700));\n  tempLevel.lines.push(new Line(680, 700, 680, 600));\n  tempLevel.lines.push(new Line(680, 600, 860, 600));\n  tempLevel.lines.push(new Line(860, 600, 860, 660));\n  tempLevel.lines.push(new Line(860, 660, 1060, 660));\n  tempLevel.lines.push(new Line(1060, 660, 1060, 560));\n  tempLevel.lines.push(new Line(1060, 560, 1120, 560));\n  tempLevel.lines.push(new Line(1120, 560, 1120, 0));\n  tempLevel.lines.push(new Line(720, 900, 720, 840));\n  tempLevel.lines.push(new Line(720, 840, 640, 840));\n  tempLevel.lines.push(new Line(640, 840, 640, 800));\n  tempLevel.lines.push(new Line(640, 800, 820, 800));\n  tempLevel.lines.push(new Line(820, 800, 820, 900));\n  tempLevel.lines.push(new Line(640, 480, 760, 360));\n  tempLevel.lines.push(new Line(760, 360, 760, 260));\n  tempLevel.lines.push(new Line(760, 260, 780, 260));\n  tempLevel.lines.push(new Line(780, 260, 780, 360));\n  tempLevel.lines.push(new Line(780, 360, 900, 480));\n  tempLevel.lines.push(new Line(900, 480, 640, 480));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(160, 900, 160, 560));\n  tempLevel.lines.push(new Line(160, 560, 80, 560));\n  tempLevel.lines.push(new Line(80, 540, 80, 260));\n  tempLevel.lines.push(new Line(80, 260, 20, 260));\n  tempLevel.lines.push(new Line(20, 240, 20, 0));\n  tempLevel.lines.push(new Line(1120, 900, 1120, 160));\n  tempLevel.lines.push(new Line(1120, 160, 1180, 160));\n  tempLevel.lines.push(new Line(1180, 160, 1180, 0));\n  tempLevel.lines.push(new Line(320, 800, 320, 820));\n  tempLevel.lines.push(new Line(320, 820, 420, 820));\n  tempLevel.lines.push(new Line(420, 820, 420, 800));\n  tempLevel.lines.push(new Line(420, 800, 320, 800));\n  tempLevel.lines.push(new Line(360, 500, 360, 520));\n  tempLevel.lines.push(new Line(360, 520, 460, 520));\n  tempLevel.lines.push(new Line(460, 520, 460, 500));\n  tempLevel.lines.push(new Line(460, 500, 360, 500));\n  tempLevel.lines.push(new Line(800, 420, 800, 440));\n  tempLevel.lines.push(new Line(800, 440, 900, 440));\n  tempLevel.lines.push(new Line(900, 440, 900, 420));\n  tempLevel.lines.push(new Line(900, 420, 800, 420));\n  tempLevel.lines.push(new Line(80, 560, 80, 540));\n  tempLevel.lines.push(new Line(20, 260, 20, 240));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(20, 900, 20, 0));\n  tempLevel.lines.push(new Line(1180, 900, 1180, 0));\n  tempLevel.lines.push(new Line(1060, 0, 1060, 40));\n  tempLevel.lines.push(new Line(1060, 40, 880, 40));\n  tempLevel.lines.push(new Line(880, 40, 880, 0));\n  tempLevel.lines.push(new Line(720, 200, 720, 220));\n  tempLevel.lines.push(new Line(720, 220, 620, 220));\n  tempLevel.lines.push(new Line(620, 220, 620, 200));\n  tempLevel.lines.push(new Line(620, 200, 720, 200));\n  tempLevel.lines.push(new Line(880, 360, 880, 380));\n  tempLevel.lines.push(new Line(880, 380, 980, 380));\n  tempLevel.lines.push(new Line(980, 380, 980, 360));\n  tempLevel.lines.push(new Line(980, 360, 880, 360));\n  tempLevel.lines.push(new Line(700, 520, 700, 540));\n  tempLevel.lines.push(new Line(700, 540, 600, 540));\n  tempLevel.lines.push(new Line(600, 540, 600, 520));\n  tempLevel.lines.push(new Line(600, 520, 700, 520));\n  tempLevel.lines.push(new Line(600, 780, 600, 800));\n  tempLevel.lines.push(new Line(600, 800, 700, 800));\n  tempLevel.lines.push(new Line(700, 800, 700, 780));\n  tempLevel.lines.push(new Line(700, 780, 600, 780));\n  tempLevel.lines.push(new Line(240, 520, 240, 540));\n  tempLevel.lines.push(new Line(240, 540, 340, 540));\n  tempLevel.lines.push(new Line(340, 540, 340, 520));\n  tempLevel.lines.push(new Line(340, 520, 240, 520));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(1180, 900, 1180, 0));\n  tempLevel.lines.push(new Line(860, 0, 860, 40));\n  tempLevel.lines.push(new Line(860, 40, 600, 40));\n  tempLevel.lines.push(new Line(600, 40, 600, 0));\n  tempLevel.lines.push(new Line(20, 0, 20, 900));\n  tempLevel.lines.push(new Line(180, 760, 180, 780));\n  tempLevel.lines.push(new Line(180, 780, 280, 780));\n  tempLevel.lines.push(new Line(280, 780, 280, 760));\n  tempLevel.lines.push(new Line(280, 760, 180, 760));\n  tempLevel.lines.push(new Line(880, 900, 880, 860));\n  tempLevel.lines.push(new Line(880, 860, 1060, 860));\n  tempLevel.lines.push(new Line(1060, 860, 1060, 900));\n  tempLevel.lines.push(new Line(1100, 740, 980, 620));\n  tempLevel.lines.push(new Line(980, 620, 980, 580));\n  tempLevel.lines.push(new Line(980, 580, 960, 580));\n  tempLevel.lines.push(new Line(960, 580, 960, 620));\n  tempLevel.lines.push(new Line(960, 620, 840, 740));\n  tempLevel.lines.push(new Line(840, 740, 1100, 740));\n  tempLevel.lines.push(new Line(520, 560, 520, 620));\n  tempLevel.lines.push(new Line(520, 620, 700, 620));\n  tempLevel.lines.push(new Line(700, 620, 700, 560));\n  tempLevel.lines.push(new Line(700, 560, 520, 560));\n  tempLevel.lines.push(new Line(480, 440, 600, 320));\n  tempLevel.lines.push(new Line(600, 320, 600, 220));\n  tempLevel.lines.push(new Line(600, 220, 620, 220));\n  tempLevel.lines.push(new Line(620, 220, 620, 320));\n  tempLevel.lines.push(new Line(620, 320, 740, 440));\n  tempLevel.lines.push(new Line(740, 440, 480, 440));\n  tempLevel.lines.push(new Line(260, 540, 160, 540));\n  tempLevel.lines.push(new Line(160, 540, 160, 480));\n  tempLevel.lines.push(new Line(160, 480, 260, 480));\n  tempLevel.lines.push(new Line(260, 480, 260, 540));\n  tempLevel.lines.push(new Line(120, 360, 240, 240));\n  tempLevel.lines.push(new Line(240, 240, 240, 140));\n  tempLevel.lines.push(new Line(240, 140, 260, 140));\n  tempLevel.lines.push(new Line(260, 140, 260, 240));\n  tempLevel.lines.push(new Line(260, 240, 380, 360));\n  tempLevel.lines.push(new Line(380, 360, 120, 360));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(20, 900, 20, 780));\n  tempLevel.lines.push(new Line(20, 780, 140, 660));\n  tempLevel.lines.push(new Line(140, 660, 140, 540));\n  tempLevel.lines.push(new Line(140, 540, 80, 540));\n  tempLevel.lines.push(new Line(80, 540, 80, 300));\n  tempLevel.lines.push(new Line(80, 300, 20, 300));\n  tempLevel.lines.push(new Line(20, 300, 20, 0));\n  tempLevel.lines.push(new Line(380, 0, 380, 360));\n  tempLevel.lines.push(new Line(380, 360, 620, 360));\n  tempLevel.lines.push(new Line(620, 360, 620, 240));\n  tempLevel.lines.push(new Line(620, 240, 480, 240));\n  tempLevel.lines.push(new Line(480, 240, 480, 0));\n  tempLevel.lines.push(new Line(580, 0, 580, 40));\n  tempLevel.lines.push(new Line(580, 40, 960, 40));\n  tempLevel.lines.push(new Line(960, 40, 960, 0));\n  tempLevel.lines.push(new Line(380, 480, 380, 600));\n  tempLevel.lines.push(new Line(380, 600, 720, 600));\n  tempLevel.lines.push(new Line(720, 600, 720, 480));\n  tempLevel.lines.push(new Line(720, 480, 380, 480));\n  tempLevel.lines.push(new Line(520, 780, 520, 820));\n  tempLevel.lines.push(new Line(520, 820, 600, 900));\n  tempLevel.lines.push(new Line(860, 900, 860, 740));\n  tempLevel.lines.push(new Line(860, 740, 720, 740));\n  tempLevel.lines.push(new Line(720, 740, 720, 780));\n  tempLevel.lines.push(new Line(720, 780, 520, 780));\n  tempLevel.lines.push(new Line(1180, 900, 1180, 600));\n  tempLevel.lines.push(new Line(1180, 600, 1120, 540));\n  tempLevel.lines.push(new Line(1120, 540, 1120, 480));\n  tempLevel.lines.push(new Line(1120, 480, 1200, 480));\n  tempLevel.lines.push(new Line(1200, 480, 1200, 380));\n  tempLevel.lines.push(new Line(1200, 380, 1100, 380));\n  tempLevel.lines.push(new Line(1100, 380, 1100, 240));\n  tempLevel.lines.push(new Line(1100, 240, 1180, 240));\n  tempLevel.lines.push(new Line(1180, 240, 1180, 0));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(380, 900, 380, 760));\n  tempLevel.lines.push(new Line(380, 760, 480, 760));\n  tempLevel.lines.push(new Line(480, 760, 480, 900));\n  tempLevel.lines.push(new Line(580, 900, 580, 780));\n  tempLevel.lines.push(new Line(580, 780, 960, 780));\n  tempLevel.lines.push(new Line(960, 780, 960, 900));\n  tempLevel.lines.push(new Line(1180, 900, 1180, 180));\n  tempLevel.lines.push(new Line(1180, 180, 1120, 180));\n  tempLevel.lines.push(new Line(1120, 180, 1120, 0));\n  tempLevel.lines.push(new Line(980, 0, 980, 180));\n  tempLevel.lines.push(new Line(980, 180, 660, 180));\n  tempLevel.lines.push(new Line(660, 180, 660, 0));\n  tempLevel.lines.push(new Line(540, 240, 280, 240));\n  tempLevel.lines.push(new Line(280, 240, 280, 100));\n  tempLevel.lines.push(new Line(280, 100, 540, 100));\n  tempLevel.lines.push(new Line(540, 100, 540, 240));\n  tempLevel.lines.push(new Line(20, 900, 20, 0));\n  tempLevel.lines.push(new Line(140, 600, 280, 600));\n  tempLevel.lines.push(new Line(280, 600, 280, 380));\n  tempLevel.lines.push(new Line(280, 380, 140, 380));\n  tempLevel.lines.push(new Line(140, 380, 140, 600));\n  tempLevel.lines.push(new Line(420, 600, 580, 600));\n  tempLevel.lines.push(new Line(580, 600, 580, 420));\n  tempLevel.lines.push(new Line(580, 420, 420, 420));\n  tempLevel.lines.push(new Line(420, 420, 420, 600));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(20, 900, 20, 0));\n  tempLevel.lines.push(new Line(180, 540, 380, 540));\n  tempLevel.lines.push(new Line(380, 540, 380, 300));\n  tempLevel.lines.push(new Line(380, 300, 280, 300));\n  tempLevel.lines.push(new Line(280, 300, 280, 220));\n  tempLevel.lines.push(new Line(280, 220, 180, 220));\n  tempLevel.lines.push(new Line(180, 220, 180, 540));\n  tempLevel.lines.push(new Line(540, 400, 540, 540));\n  tempLevel.lines.push(new Line(540, 540, 900, 540));\n  tempLevel.lines.push(new Line(900, 540, 900, 440));\n  tempLevel.lines.push(new Line(900, 440, 700, 440));\n  tempLevel.lines.push(new Line(700, 440, 700, 400));\n  tempLevel.lines.push(new Line(700, 400, 540, 400));\n  tempLevel.lines.push(new Line(660, 900, 660, 700));\n  tempLevel.lines.push(new Line(660, 700, 980, 700));\n  tempLevel.lines.push(new Line(980, 700, 980, 900));\n  tempLevel.lines.push(new Line(1120, 900, 1120, 780));\n  tempLevel.lines.push(new Line(1120, 780, 1180, 780));\n  tempLevel.lines.push(new Line(1180, 780, 1180, 0));\n  tempLevel.lines.push(new Line(420, 100, 420, 0));\n  tempLevel.lines.push(new Line(420, 100, 620, 100));\n  tempLevel.lines.push(new Line(620, 100, 620, 220));\n  tempLevel.lines.push(new Line(620, 220, 900, 220));\n  tempLevel.lines.push(new Line(900, 220, 900, 0));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(20, 900, 20, 780));\n  tempLevel.lines.push(new Line(20, 780, 80, 720));\n  tempLevel.lines.push(new Line(80, 720, 80, 520));\n  tempLevel.lines.push(new Line(80, 520, 20, 520));\n  tempLevel.lines.push(new Line(20, 520, 20, 0));\n  tempLevel.lines.push(new Line(380, 620, 440, 620));\n  tempLevel.lines.push(new Line(440, 620, 440, 440));\n  tempLevel.lines.push(new Line(440, 440, 380, 440));\n  tempLevel.lines.push(new Line(380, 440, 380, 620));\n  tempLevel.lines.push(new Line(420, 880, 420, 820));\n  tempLevel.lines.push(new Line(420, 820, 640, 820));\n  tempLevel.lines.push(new Line(640, 820, 640, 780));\n  tempLevel.lines.push(new Line(640, 780, 920, 780));\n  tempLevel.lines.push(new Line(920, 780, 920, 900));\n  tempLevel.lines.push(new Line(1180, 900, 1180, 440));\n  tempLevel.lines.push(new Line(1180, 440, 1120, 380));\n  tempLevel.lines.push(new Line(1120, 380, 1120, 280));\n  tempLevel.lines.push(new Line(1120, 280, 1180, 280));\n  tempLevel.lines.push(new Line(1180, 280, 1180, 0));\n  tempLevel.lines.push(new Line(500, 0, 500, 120));\n  tempLevel.lines.push(new Line(500, 120, 180, 120));\n  tempLevel.lines.push(new Line(180, 120, 180, 0));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(1180, 900, 1180, 100));\n  tempLevel.lines.push(new Line(1180, 100, 1100, 100));\n  tempLevel.lines.push(new Line(1100, 100, 1100, 40));\n  tempLevel.lines.push(new Line(1100, 40, 1020, 40));\n  tempLevel.lines.push(new Line(1020, 40, 1020, 0));\n  tempLevel.lines.push(new Line(180, 900, 180, 800));\n  tempLevel.lines.push(new Line(180, 800, 340, 800));\n  tempLevel.lines.push(new Line(340, 800, 340, 840));\n  tempLevel.lines.push(new Line(340, 840, 500, 840));\n  tempLevel.lines.push(new Line(500, 840, 500, 920));\n  tempLevel.lines.push(new Line(20, 900, 20, 0));\n  tempLevel.lines.push(new Line(800, 700, 680, 700));\n  tempLevel.lines.push(new Line(680, 700, 680, 560));\n  tempLevel.lines.push(new Line(680, 560, 800, 560));\n  tempLevel.lines.push(new Line(800, 560, 800, 700));\n  tempLevel.lines.push(new Line(960, 740, 1080, 740));\n  tempLevel.lines.push(new Line(1080, 740, 1080, 560));\n  tempLevel.lines.push(new Line(1080, 560, 960, 560));\n  tempLevel.lines.push(new Line(960, 560, 960, 740));\n  tempLevel.lines.push(new Line(720, 340, 820, 340));\n  tempLevel.lines.push(new Line(820, 340, 820, 200));\n  tempLevel.lines.push(new Line(820, 200, 720, 200));\n  tempLevel.lines.push(new Line(720, 200, 720, 340));\n  tempLevel.lines.push(new Line(920, 380, 1020, 380));\n  tempLevel.lines.push(new Line(1020, 380, 1020, 320));\n  tempLevel.lines.push(new Line(1020, 320, 1080, 320));\n  tempLevel.lines.push(new Line(1080, 320, 1080, 240));\n  tempLevel.lines.push(new Line(1080, 240, 920, 240));\n  tempLevel.lines.push(new Line(920, 240, 920, 380));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(20, 900, 20, 720));\n  tempLevel.lines.push(new Line(20, 720, 100, 640));\n  tempLevel.lines.push(new Line(100, 640, 100, 500));\n  tempLevel.lines.push(new Line(100, 500, 20, 500));\n  tempLevel.lines.push(new Line(20, 500, 20, 120));\n  tempLevel.lines.push(new Line(20, 120, 120, 20));\n  tempLevel.lines.push(new Line(120, 20, 120, 0));\n  tempLevel.lines.push(new Line(300, 540, 440, 540));\n  tempLevel.lines.push(new Line(440, 540, 440, 480));\n  tempLevel.lines.push(new Line(440, 480, 300, 480));\n  tempLevel.lines.push(new Line(300, 480, 300, 540));\n  tempLevel.lines.push(new Line(680, 640, 820, 640));\n  tempLevel.lines.push(new Line(820, 640, 820, 580));\n  tempLevel.lines.push(new Line(820, 580, 680, 580));\n  tempLevel.lines.push(new Line(680, 580, 680, 640));\n  tempLevel.lines.push(new Line(1020, 900, 1020, 820));\n  tempLevel.lines.push(new Line(1020, 820, 1180, 820));\n  tempLevel.lines.push(new Line(1180, 820, 1180, 580));\n  tempLevel.lines.push(new Line(1180, 580, 1100, 500));\n  tempLevel.lines.push(new Line(1100, 500, 1100, 400));\n  tempLevel.lines.push(new Line(1100, 400, 1180, 400));\n  tempLevel.lines.push(new Line(1180, 400, 1180, 0));\n  tempLevel.lines.push(new Line(800, 360, 660, 360));\n  tempLevel.lines.push(new Line(660, 360, 660, 300));\n  tempLevel.lines.push(new Line(660, 300, 800, 300));\n  tempLevel.lines.push(new Line(800, 300, 800, 360));\n  tempLevel.lines.push(new Line(480, 240, 340, 240));\n  tempLevel.lines.push(new Line(340, 240, 340, 180));\n  tempLevel.lines.push(new Line(340, 180, 480, 180));\n  tempLevel.lines.push(new Line(480, 180, 480, 240));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(120, 900, 120, 820));\n  tempLevel.lines.push(new Line(120, 820, 20, 820));\n  tempLevel.lines.push(new Line(20, 820, 20, 280));\n  tempLevel.lines.push(new Line(20, 280, 500, 280));\n  tempLevel.lines.push(new Line(500, 280, 500, 240));\n  tempLevel.lines.push(new Line(500, 240, 40, 240));\n  tempLevel.lines.push(new Line(40, 240, 40, 120));\n  tempLevel.lines.push(new Line(40, 120, 100, 120));\n  tempLevel.lines.push(new Line(100, 120, 100, 0));\n  tempLevel.lines.push(new Line(180, 0, 180, 120));\n  tempLevel.lines.push(new Line(180, 120, 240, 120));\n  tempLevel.lines.push(new Line(240, 120, 240, 40));\n  tempLevel.lines.push(new Line(240, 40, 960, 40));\n  tempLevel.lines.push(new Line(960, 40, 960, 120));\n  tempLevel.lines.push(new Line(960, 120, 1020, 120));\n  tempLevel.lines.push(new Line(1020, 120, 1020, 0));\n  tempLevel.lines.push(new Line(1100, 0, 1100, 120));\n  tempLevel.lines.push(new Line(1100, 120, 1160, 120));\n  tempLevel.lines.push(new Line(1160, 120, 1160, 240));\n  tempLevel.lines.push(new Line(1160, 240, 700, 240));\n  tempLevel.lines.push(new Line(700, 240, 700, 280));\n  tempLevel.lines.push(new Line(700, 280, 1180, 280));\n  tempLevel.lines.push(new Line(1180, 280, 1180, 900));\n  tempLevel.lines.push(new Line(740, 780, 740, 820));\n  tempLevel.lines.push(new Line(740, 820, 920, 820));\n  tempLevel.lines.push(new Line(920, 820, 920, 780));\n  tempLevel.lines.push(new Line(920, 780, 740, 780));\n  tempLevel.lines.push(new Line(500, 600, 500, 640));\n  tempLevel.lines.push(new Line(500, 640, 360, 640));\n  tempLevel.lines.push(new Line(360, 640, 360, 600));\n  tempLevel.lines.push(new Line(360, 600, 500, 600));\n  tempLevel.lines.push(new Line(660, 460, 660, 500));\n  tempLevel.lines.push(new Line(660, 500, 760, 500));\n  tempLevel.lines.push(new Line(760, 500, 760, 460));\n  tempLevel.lines.push(new Line(760, 460, 660, 460));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(100, 900, 100, 860));\n  tempLevel.lines.push(new Line(100, 860, 40, 860));\n  tempLevel.lines.push(new Line(40, 860, 40, 0));\n  tempLevel.lines.push(new Line(180, 900, 180, 860));\n  tempLevel.lines.push(new Line(180, 860, 400, 860));\n  tempLevel.lines.push(new Line(400, 860, 400, 840));\n  tempLevel.lines.push(new Line(400, 840, 480, 840));\n  tempLevel.lines.push(new Line(480, 840, 480, 820));\n  tempLevel.lines.push(new Line(480, 820, 560, 820));\n  tempLevel.lines.push(new Line(560, 820, 560, 800));\n  tempLevel.lines.push(new Line(560, 800, 640, 800));\n  tempLevel.lines.push(new Line(640, 800, 640, 780));\n  tempLevel.lines.push(new Line(640, 780, 720, 780));\n  tempLevel.lines.push(new Line(720, 780, 720, 760));\n  tempLevel.lines.push(new Line(720, 760, 800, 760));\n  tempLevel.lines.push(new Line(800, 760, 800, 680));\n  tempLevel.lines.push(new Line(800, 680, 860, 680));\n  tempLevel.lines.push(new Line(860, 680, 860, 760));\n  tempLevel.lines.push(new Line(860, 760, 900, 760));\n  tempLevel.lines.push(new Line(900, 760, 900, 860));\n  tempLevel.lines.push(new Line(900, 860, 1020, 860));\n  tempLevel.lines.push(new Line(1020, 860, 1020, 900));\n  tempLevel.lines.push(new Line(1100, 900, 1100, 860));\n  tempLevel.lines.push(new Line(1100, 860, 1160, 860));\n  tempLevel.lines.push(new Line(1160, 860, 1160, 0));\n  tempLevel.lines.push(new Line(300, 420, 280, 420));\n  tempLevel.lines.push(new Line(280, 420, 280, 340));\n  tempLevel.lines.push(new Line(280, 340, 300, 340));\n  tempLevel.lines.push(new Line(300, 340, 300, 420));\n  tempLevel.lines.push(new Line(380, 540, 380, 700));\n  tempLevel.lines.push(new Line(380, 700, 400, 700));\n  tempLevel.lines.push(new Line(400, 700, 400, 540));\n  tempLevel.lines.push(new Line(400, 540, 380, 540));\n  tempLevel.lines.push(new Line(580, 540, 580, 620));\n  tempLevel.lines.push(new Line(580, 620, 600, 620));\n  tempLevel.lines.push(new Line(600, 620, 600, 540));\n  tempLevel.lines.push(new Line(600, 540, 580, 540));\n  tempLevel.lines.push(new Line(720, 380, 720, 460));\n  tempLevel.lines.push(new Line(720, 460, 740, 460));\n  tempLevel.lines.push(new Line(740, 460, 740, 380));\n  tempLevel.lines.push(new Line(740, 380, 720, 380));\n  tempLevel.lines.push(new Line(460, 300, 460, 380));\n  tempLevel.lines.push(new Line(460, 380, 480, 380));\n  tempLevel.lines.push(new Line(480, 380, 480, 300));\n  tempLevel.lines.push(new Line(480, 300, 460, 300));\n  tempLevel.lines.push(new Line(320, 0, 320, 80));\n  tempLevel.lines.push(new Line(320, 80, 340, 80));\n  tempLevel.lines.push(new Line(340, 80, 340, 0));\n  tempLevel.lines.push(new Line(780, 140, 780, 220));\n  tempLevel.lines.push(new Line(780, 220, 800, 220));\n  tempLevel.lines.push(new Line(800, 220, 800, 140));\n  tempLevel.lines.push(new Line(800, 140, 780, 140));\n  tempLevel.lines.push(new Line(1020, 200, 1020, 280));\n  tempLevel.lines.push(new Line(1020, 280, 1040, 280));\n  tempLevel.lines.push(new Line(1040, 280, 1040, 200));\n  tempLevel.lines.push(new Line(1040, 200, 1020, 200));\n  tempLevel.lines.push(new Line(880, 0, 880, 80));\n  tempLevel.lines.push(new Line(880, 80, 900, 80));\n  tempLevel.lines.push(new Line(900, 80, 900, 0));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(40, 900, 40, 0));\n  tempLevel.lines.push(new Line(240, 0, 240, 40));\n  tempLevel.lines.push(new Line(240, 40, 400, 40));\n  tempLevel.lines.push(new Line(400, 40, 400, 0));\n  tempLevel.lines.push(new Line(800, 0, 800, 40));\n  tempLevel.lines.push(new Line(800, 40, 960, 40));\n  tempLevel.lines.push(new Line(960, 40, 960, 0));\n  tempLevel.lines.push(new Line(1160, 0, 1160, 900));\n  tempLevel.lines.push(new Line(900, 900, 900, 820));\n  tempLevel.lines.push(new Line(900, 820, 880, 820));\n  tempLevel.lines.push(new Line(880, 820, 880, 900));\n  tempLevel.lines.push(new Line(340, 900, 340, 820));\n  tempLevel.lines.push(new Line(340, 820, 320, 820));\n  tempLevel.lines.push(new Line(320, 820, 320, 900));\n  tempLevel.lines.push(new Line(380, 720, 380, 740));\n  tempLevel.lines.push(new Line(380, 740, 560, 740));\n  tempLevel.lines.push(new Line(560, 740, 560, 720));\n  tempLevel.lines.push(new Line(560, 720, 480, 720));\n  tempLevel.lines.push(new Line(480, 720, 480, 640));\n  tempLevel.lines.push(new Line(480, 640, 460, 640));\n  tempLevel.lines.push(new Line(460, 640, 460, 720));\n  tempLevel.lines.push(new Line(460, 720, 380, 720));\n  tempLevel.lines.push(new Line(200, 520, 200, 540));\n  tempLevel.lines.push(new Line(200, 540, 380, 540));\n  tempLevel.lines.push(new Line(380, 540, 380, 520));\n  tempLevel.lines.push(new Line(380, 520, 300, 520));\n  tempLevel.lines.push(new Line(300, 520, 300, 440));\n  tempLevel.lines.push(new Line(300, 440, 280, 440));\n  tempLevel.lines.push(new Line(280, 440, 280, 520));\n  tempLevel.lines.push(new Line(280, 520, 200, 520));\n  tempLevel.lines.push(new Line(840, 500, 840, 520));\n  tempLevel.lines.push(new Line(840, 520, 1020, 520));\n  tempLevel.lines.push(new Line(1020, 520, 1020, 500));\n  tempLevel.lines.push(new Line(1020, 500, 940, 500));\n  tempLevel.lines.push(new Line(940, 500, 940, 420));\n  tempLevel.lines.push(new Line(940, 420, 920, 420));\n  tempLevel.lines.push(new Line(920, 420, 920, 500));\n  tempLevel.lines.push(new Line(920, 500, 840, 500));\n  tempLevel.lines.push(new Line(760, 360, 760, 380));\n  tempLevel.lines.push(new Line(760, 380, 580, 380));\n  tempLevel.lines.push(new Line(580, 380, 580, 360));\n  tempLevel.lines.push(new Line(580, 360, 660, 360));\n  tempLevel.lines.push(new Line(660, 360, 660, 280));\n  tempLevel.lines.push(new Line(660, 280, 680, 280));\n  tempLevel.lines.push(new Line(680, 280, 680, 360));\n  tempLevel.lines.push(new Line(680, 360, 760, 360));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(40, 900, 40, 680));\n  tempLevel.lines.push(new Line(40, 680, 60, 680));\n  tempLevel.lines.push(new Line(60, 680, 60, 660));\n  tempLevel.lines.push(new Line(60, 660, 20, 620));\n  tempLevel.lines.push(new Line(20, 620, 20, 0));\n  tempLevel.lines.push(new Line(280, 0, 280, 380));\n  tempLevel.lines.push(new Line(280, 380, 240, 420));\n  tempLevel.lines.push(new Line(240, 420, 240, 500));\n  tempLevel.lines.push(new Line(240, 500, 320, 500));\n  tempLevel.lines.push(new Line(320, 500, 320, 0));\n  tempLevel.lines.push(new Line(240, 900, 240, 620));\n  tempLevel.lines.push(new Line(240, 620, 340, 620));\n  tempLevel.lines.push(new Line(340, 620, 340, 640));\n  tempLevel.lines.push(new Line(340, 640, 320, 640));\n  tempLevel.lines.push(new Line(320, 640, 320, 860));\n  tempLevel.lines.push(new Line(320, 860, 400, 860));\n  tempLevel.lines.push(new Line(400, 860, 400, 900));\n  tempLevel.lines.push(new Line(800, 900, 800, 860));\n  tempLevel.lines.push(new Line(800, 860, 880, 860));\n  tempLevel.lines.push(new Line(880, 860, 880, 640));\n  tempLevel.lines.push(new Line(880, 640, 860, 640));\n  tempLevel.lines.push(new Line(860, 640, 860, 620));\n  tempLevel.lines.push(new Line(860, 620, 960, 620));\n  tempLevel.lines.push(new Line(960, 620, 960, 900));\n  tempLevel.lines.push(new Line(1160, 900, 1160, 680));\n  tempLevel.lines.push(new Line(1160, 680, 1140, 680));\n  tempLevel.lines.push(new Line(1140, 680, 1140, 660));\n  tempLevel.lines.push(new Line(1140, 660, 1180, 620));\n  tempLevel.lines.push(new Line(1180, 620, 1180, 0));\n  tempLevel.lines.push(new Line(920, 0, 920, 400));\n  tempLevel.lines.push(new Line(920, 400, 960, 440));\n  tempLevel.lines.push(new Line(960, 440, 960, 500));\n  tempLevel.lines.push(new Line(960, 500, 880, 500));\n  tempLevel.lines.push(new Line(880, 500, 880, 40));\n  tempLevel.lines.push(new Line(880, 40, 760, 40));\n  tempLevel.lines.push(new Line(760, 40, 760, 0));\n  tempLevel.lines.push(new Line(640, 420, 640, 440));\n  tempLevel.lines.push(new Line(640, 440, 820, 440));\n  tempLevel.lines.push(new Line(820, 440, 820, 420));\n  tempLevel.lines.push(new Line(820, 420, 740, 420));\n  tempLevel.lines.push(new Line(740, 420, 740, 340));\n  tempLevel.lines.push(new Line(740, 340, 720, 340));\n  tempLevel.lines.push(new Line(720, 340, 720, 420));\n  tempLevel.lines.push(new Line(720, 420, 640, 420));\n  tempLevel.lines.push(new Line(380, 260, 380, 280));\n  tempLevel.lines.push(new Line(380, 280, 560, 280));\n  tempLevel.lines.push(new Line(560, 280, 560, 260));\n  tempLevel.lines.push(new Line(560, 260, 480, 260));\n  tempLevel.lines.push(new Line(480, 260, 480, 180));\n  tempLevel.lines.push(new Line(480, 180, 460, 180));\n  tempLevel.lines.push(new Line(460, 180, 460, 260));\n  tempLevel.lines.push(new Line(460, 260, 380, 260));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(20, 0, 20, 900));\n  tempLevel.lines.push(new Line(280, 900, 280, 720));\n  tempLevel.lines.push(new Line(280, 720, 460, 540));\n  tempLevel.lines.push(new Line(460, 540, 560, 540));\n  tempLevel.lines.push(new Line(320, 900, 320, 740));\n  tempLevel.lines.push(new Line(320, 740, 460, 600));\n  tempLevel.lines.push(new Line(460, 600, 740, 600));\n  tempLevel.lines.push(new Line(740, 600, 880, 740));\n  tempLevel.lines.push(new Line(880, 740, 880, 760));\n  tempLevel.lines.push(new Line(880, 760, 920, 760));\n  tempLevel.lines.push(new Line(920, 760, 920, 720));\n  tempLevel.lines.push(new Line(920, 720, 740, 540));\n  tempLevel.lines.push(new Line(740, 540, 640, 540));\n  tempLevel.lines.push(new Line(760, 900, 760, 880));\n  tempLevel.lines.push(new Line(760, 880, 720, 880));\n  tempLevel.lines.push(new Line(720, 880, 720, 860));\n  tempLevel.lines.push(new Line(720, 860, 960, 860));\n  tempLevel.lines.push(new Line(960, 860, 960, 880));\n  tempLevel.lines.push(new Line(960, 880, 920, 880));\n  tempLevel.lines.push(new Line(920, 880, 920, 900));\n  tempLevel.lines.push(new Line(1180, 900, 1180, 700));\n  tempLevel.lines.push(new Line(1180, 700, 1120, 700));\n  tempLevel.lines.push(new Line(1120, 700, 1120, 620));\n  tempLevel.lines.push(new Line(1120, 620, 1180, 620));\n  tempLevel.lines.push(new Line(1180, 620, 1180, 440));\n  tempLevel.lines.push(new Line(1180, 460, 1120, 460));\n  tempLevel.lines.push(new Line(1120, 460, 1120, 380));\n  tempLevel.lines.push(new Line(1120, 380, 1180, 380));\n  tempLevel.lines.push(new Line(1180, 380, 1180, 40));\n  tempLevel.lines.push(new Line(1180, 40, 1040, 40));\n  tempLevel.lines.push(new Line(1040, 40, 1040, 0));\n  tempLevel.lines.push(new Line(640, 540, 640, 360));\n  tempLevel.lines.push(new Line(640, 360, 720, 360));\n  tempLevel.lines.push(new Line(720, 360, 720, 280));\n  tempLevel.lines.push(new Line(720, 280, 640, 280));\n  tempLevel.lines.push(new Line(640, 280, 640, 0));\n  tempLevel.lines.push(new Line(560, 540, 560, 360));\n  tempLevel.lines.push(new Line(560, 360, 480, 360));\n  tempLevel.lines.push(new Line(480, 360, 480, 280));\n  tempLevel.lines.push(new Line(480, 280, 560, 280));\n  tempLevel.lines.push(new Line(560, 280, 560, 200));\n  tempLevel.lines.push(new Line(560, 200, 580, 200));\n  tempLevel.lines.push(new Line(580, 200, 580, 20));\n  tempLevel.lines.push(new Line(580, 20, 560, 0));\n  tempLevel.lines.push(new Line(560, 0, 520, 40));\n  tempLevel.lines.push(new Line(520, 40, 480, 0));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(1040, 900, 1040, 820));\n  tempLevel.lines.push(new Line(1040, 820, 1180, 820));\n  tempLevel.lines.push(new Line(1180, 820, 1180, 380));\n  tempLevel.lines.push(new Line(1180, 380, 1120, 380));\n  tempLevel.lines.push(new Line(1120, 380, 1060, 440));\n  tempLevel.lines.push(new Line(1060, 440, 1000, 380));\n  tempLevel.lines.push(new Line(1000, 380, 1100, 280));\n  tempLevel.lines.push(new Line(1100, 280, 1100, 0));\n  tempLevel.lines.push(new Line(640, 900, 640, 820));\n  tempLevel.lines.push(new Line(640, 820, 700, 760));\n  tempLevel.lines.push(new Line(700, 760, 780, 760));\n  tempLevel.lines.push(new Line(780, 760, 780, 660));\n  tempLevel.lines.push(new Line(780, 660, 660, 660));\n  tempLevel.lines.push(new Line(660, 660, 660, 680));\n  tempLevel.lines.push(new Line(660, 680, 460, 880));\n  tempLevel.lines.push(new Line(460, 880, 480, 900));\n  tempLevel.lines.push(new Line(20, 900, 20, 660));\n  tempLevel.lines.push(new Line(20, 660, 160, 660));\n  tempLevel.lines.push(new Line(160, 660, 240, 740));\n  tempLevel.lines.push(new Line(240, 740, 320, 740));\n  tempLevel.lines.push(new Line(320, 740, 320, 780));\n  tempLevel.lines.push(new Line(320, 780, 400, 780));\n  tempLevel.lines.push(new Line(400, 780, 400, 740));\n  tempLevel.lines.push(new Line(400, 740, 420, 740));\n  tempLevel.lines.push(new Line(420, 740, 420, 680));\n  tempLevel.lines.push(new Line(420, 680, 300, 680));\n  tempLevel.lines.push(new Line(300, 680, 120, 500));\n  tempLevel.lines.push(new Line(120, 500, 20, 500));\n  tempLevel.lines.push(new Line(20, 500, 20, 0));\n  tempLevel.lines.push(new Line(120, 0, 120, 40));\n  tempLevel.lines.push(new Line(120, 40, 200, 40));\n  tempLevel.lines.push(new Line(200, 40, 200, 0));\n  tempLevel.lines.push(new Line(360, 240, 360, 300));\n  tempLevel.lines.push(new Line(360, 300, 380, 300));\n  tempLevel.lines.push(new Line(380, 300, 380, 400));\n  tempLevel.lines.push(new Line(380, 400, 460, 400));\n  tempLevel.lines.push(new Line(460, 400, 460, 300));\n  tempLevel.lines.push(new Line(460, 300, 480, 300));\n  tempLevel.lines.push(new Line(480, 300, 480, 240));\n  tempLevel.lines.push(new Line(480, 240, 360, 240));\n  tempLevel.lines.push(new Line(680, 420, 760, 420));\n  tempLevel.lines.push(new Line(760, 420, 760, 320));\n  tempLevel.lines.push(new Line(760, 320, 780, 320));\n  tempLevel.lines.push(new Line(780, 320, 780, 260));\n  tempLevel.lines.push(new Line(780, 260, 660, 260));\n  tempLevel.lines.push(new Line(660, 260, 660, 320));\n  tempLevel.lines.push(new Line(660, 320, 680, 320));\n  tempLevel.lines.push(new Line(680, 320, 680, 420));\n  tempLevel.lines.push(new Line(380, 0, 380, 40));\n  tempLevel.lines.push(new Line(380, 40, 460, 40));\n  tempLevel.lines.push(new Line(460, 40, 460, 0));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(20, 900, 20, 580));\n  tempLevel.lines.push(new Line(20, 580, 40, 580));\n  tempLevel.lines.push(new Line(40, 580, 80, 620));\n  tempLevel.lines.push(new Line(80, 620, 140, 560));\n  tempLevel.lines.push(new Line(140, 560, 20, 440));\n  tempLevel.lines.push(new Line(20, 440, 20, 0));\n  tempLevel.lines.push(new Line(120, 900, 120, 780));\n  tempLevel.lines.push(new Line(120, 780, 100, 780));\n  tempLevel.lines.push(new Line(100, 780, 100, 720));\n  tempLevel.lines.push(new Line(100, 720, 220, 720));\n  tempLevel.lines.push(new Line(220, 720, 220, 780));\n  tempLevel.lines.push(new Line(220, 780, 200, 780));\n  tempLevel.lines.push(new Line(200, 780, 200, 900));\n  tempLevel.lines.push(new Line(380, 900, 380, 780));\n  tempLevel.lines.push(new Line(380, 780, 360, 780));\n  tempLevel.lines.push(new Line(360, 780, 360, 720));\n  tempLevel.lines.push(new Line(360, 720, 480, 720));\n  tempLevel.lines.push(new Line(480, 720, 720, 480));\n  tempLevel.lines.push(new Line(720, 480, 780, 540));\n  tempLevel.lines.push(new Line(780, 540, 680, 640));\n  tempLevel.lines.push(new Line(680, 640, 680, 660));\n  tempLevel.lines.push(new Line(680, 660, 780, 660));\n  tempLevel.lines.push(new Line(780, 660, 780, 720));\n  tempLevel.lines.push(new Line(780, 720, 660, 720));\n  tempLevel.lines.push(new Line(660, 720, 660, 680));\n  tempLevel.lines.push(new Line(660, 680, 640, 680));\n  tempLevel.lines.push(new Line(640, 680, 540, 780));\n  tempLevel.lines.push(new Line(540, 780, 460, 780));\n  tempLevel.lines.push(new Line(460, 780, 460, 900));\n  tempLevel.lines.push(new Line(1100, 900, 1100, 860));\n  tempLevel.lines.push(new Line(1100, 860, 1080, 860));\n  tempLevel.lines.push(new Line(1080, 860, 1080, 800));\n  tempLevel.lines.push(new Line(1080, 800, 1180, 800));\n  tempLevel.lines.push(new Line(1180, 800, 1180, 580));\n  tempLevel.lines.push(new Line(1180, 580, 1140, 580));\n  tempLevel.lines.push(new Line(1140, 580, 1140, 560));\n  tempLevel.lines.push(new Line(1140, 560, 1180, 520));\n  tempLevel.lines.push(new Line(1180, 520, 1180, 80));\n  tempLevel.lines.push(new Line(1180, 80, 1140, 80));\n  tempLevel.lines.push(new Line(1140, 80, 1140, 0));\n  tempLevel.lines.push(new Line(1100, 220, 1100, 280));\n  tempLevel.lines.push(new Line(1100, 280, 980, 280));\n  tempLevel.lines.push(new Line(980, 280, 980, 220));\n  tempLevel.lines.push(new Line(980, 220, 1100, 220));\n  tempLevel.lines.push(new Line(820, 160, 820, 220));\n  tempLevel.lines.push(new Line(820, 220, 700, 220));\n  tempLevel.lines.push(new Line(700, 220, 700, 160));\n  tempLevel.lines.push(new Line(700, 160, 820, 160));\n  tempLevel.lines.push(new Line(560, 360, 560, 420));\n  tempLevel.lines.push(new Line(560, 420, 440, 420));\n  tempLevel.lines.push(new Line(440, 420, 440, 360));\n  tempLevel.lines.push(new Line(440, 360, 560, 360));\n  tempLevel.lines.push(new Line(220, 0, 220, 40));\n  tempLevel.lines.push(new Line(220, 40, 540, 40));\n  tempLevel.lines.push(new Line(540, 40, 540, 0));\n  tempLevel.lines.push(new Line(640, 0, 640, 40));\n  tempLevel.lines.push(new Line(640, 40, 980, 40));\n  tempLevel.lines.push(new Line(980, 40, 980, 0));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(20, 0, 20, 920));\n  tempLevel.lines.push(new Line(220, 900, 220, 460));\n  tempLevel.lines.push(new Line(220, 460, 280, 460));\n  tempLevel.lines.push(new Line(280, 460, 420, 600));\n  tempLevel.lines.push(new Line(420, 600, 460, 600));\n  tempLevel.lines.push(new Line(460, 600, 540, 680));\n  tempLevel.lines.push(new Line(540, 680, 540, 900));\n  tempLevel.lines.push(new Line(640, 900, 640, 740));\n  tempLevel.lines.push(new Line(640, 740, 660, 720));\n  tempLevel.lines.push(new Line(660, 720, 720, 720));\n  tempLevel.lines.push(new Line(720, 720, 820, 820));\n  tempLevel.lines.push(new Line(820, 820, 940, 820));\n  tempLevel.lines.push(new Line(940, 820, 980, 860));\n  tempLevel.lines.push(new Line(980, 860, 980, 900));\n  tempLevel.lines.push(new Line(1140, 900, 1140, 560));\n  tempLevel.lines.push(new Line(1140, 560, 1180, 560));\n  tempLevel.lines.push(new Line(1180, 560, 1180, 20));\n  tempLevel.lines.push(new Line(1180, 40, 1120, 40));\n  tempLevel.lines.push(new Line(1120, 40, 1120, 0));\n  tempLevel.lines.push(new Line(920, 240, 920, 300));\n  tempLevel.lines.push(new Line(920, 300, 620, 300));\n  tempLevel.lines.push(new Line(620, 300, 620, 240));\n  tempLevel.lines.push(new Line(620, 240, 720, 240));\n  tempLevel.lines.push(new Line(720, 240, 820, 140));\n  tempLevel.lines.push(new Line(820, 140, 920, 240));\n  tempLevel.lines.push(new Line(280, 0, 280, 40));\n  tempLevel.lines.push(new Line(280, 40, 360, 40));\n  tempLevel.lines.push(new Line(360, 40, 360, 0));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(1120, 900, 1120, 860));\n  tempLevel.lines.push(new Line(1120, 860, 1180, 860));\n  tempLevel.lines.push(new Line(1180, 860, 1180, 620));\n  tempLevel.lines.push(new Line(1180, 620, 1120, 620));\n  tempLevel.lines.push(new Line(1120, 620, 1120, 580));\n  tempLevel.lines.push(new Line(1120, 580, 1200, 500));\n  tempLevel.lines.push(new Line(1200, 500, 1200, 0));\n  tempLevel.lines.push(new Line(360, 900, 360, 740));\n  tempLevel.lines.push(new Line(360, 740, 280, 740));\n  tempLevel.lines.push(new Line(280, 740, 280, 920));\n  tempLevel.lines.push(new Line(20, 900, 20, 620));\n  tempLevel.lines.push(new Line(20, 620, 80, 620));\n  tempLevel.lines.push(new Line(80, 620, 80, 580));\n  tempLevel.lines.push(new Line(80, 580, 0, 500));\n  tempLevel.lines.push(new Line(0, 500, 0, 0));\n  tempLevel.lines.push(new Line(460, 620, 460, 720));\n  tempLevel.lines.push(new Line(460, 720, 480, 720));\n  tempLevel.lines.push(new Line(480, 720, 480, 620));\n  tempLevel.lines.push(new Line(480, 620, 460, 620));\n  tempLevel.lines.push(new Line(760, 680, 760, 720));\n  tempLevel.lines.push(new Line(760, 720, 840, 720));\n  tempLevel.lines.push(new Line(840, 720, 840, 680));\n  tempLevel.lines.push(new Line(840, 680, 760, 680));\n  tempLevel.lines.push(new Line(1000, 0, 1000, 40));\n  tempLevel.lines.push(new Line(1000, 40, 920, 40));\n  tempLevel.lines.push(new Line(920, 40, 920, 400));\n  tempLevel.lines.push(new Line(920, 400, 800, 400));\n  tempLevel.lines.push(new Line(800, 400, 800, 360));\n  tempLevel.lines.push(new Line(800, 360, 840, 360));\n  tempLevel.lines.push(new Line(840, 360, 840, 40));\n  tempLevel.lines.push(new Line(840, 40, 820, 40));\n  tempLevel.lines.push(new Line(820, 40, 820, 0));\n  tempLevel.lines.push(new Line(360, 0, 360, 80));\n  tempLevel.lines.push(new Line(360, 80, 280, 80));\n  tempLevel.lines.push(new Line(280, 80, 280, 0));\n  tempLevel.lines.push(new Line(280, 240, 280, 360));\n  tempLevel.lines.push(new Line(280, 360, 320, 360));\n  tempLevel.lines.push(new Line(320, 360, 320, 280));\n  tempLevel.lines.push(new Line(320, 280, 400, 280));\n  tempLevel.lines.push(new Line(400, 280, 400, 240));\n  tempLevel.lines.push(new Line(400, 240, 280, 240));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(280, 900, 280, 360));\n  tempLevel.lines.push(new Line(280, 360, 260, 360));\n  tempLevel.lines.push(new Line(260, 360, 260, 320));\n  tempLevel.lines.push(new Line(260, 320, 360, 320));\n  tempLevel.lines.push(new Line(360, 320, 360, 900));\n  tempLevel.lines.push(new Line(820, 900, 820, 860));\n  tempLevel.lines.push(new Line(820, 860, 1000, 860));\n  tempLevel.lines.push(new Line(1000, 860, 1000, 900));\n  tempLevel.lines.push(new Line(540, 620, 540, 660));\n  tempLevel.lines.push(new Line(540, 660, 620, 660));\n  tempLevel.lines.push(new Line(620, 660, 620, 620));\n  tempLevel.lines.push(new Line(620, 620, 540, 620));\n  tempLevel.lines.push(new Line(820, 420, 820, 460));\n  tempLevel.lines.push(new Line(820, 460, 840, 460));\n  tempLevel.lines.push(new Line(840, 460, 840, 520));\n  tempLevel.lines.push(new Line(840, 520, 920, 520));\n  tempLevel.lines.push(new Line(920, 520, 920, 0));\n  tempLevel.lines.push(new Line(820, 420, 880, 420));\n  tempLevel.lines.push(new Line(880, 420, 880, 240));\n  tempLevel.lines.push(new Line(880, 240, 840, 240));\n  tempLevel.lines.push(new Line(840, 240, 840, 0));\n  tempLevel.lines.push(new Line(620, 300, 620, 340));\n  tempLevel.lines.push(new Line(620, 340, 700, 340));\n  tempLevel.lines.push(new Line(700, 340, 700, 300));\n  tempLevel.lines.push(new Line(700, 300, 620, 300));\n  tempLevel.lines.push(new Line(340, 0, 340, 140));\n  tempLevel.lines.push(new Line(340, 140, 280, 140));\n  tempLevel.lines.push(new Line(280, 140, 280, 40));\n  tempLevel.lines.push(new Line(280, 40, 220, 40));\n  tempLevel.lines.push(new Line(220, 40, 220, 0));\n  tempLevel.lines.push(new Line(0, 0, 0, 900));\n  tempLevel.lines.push(new Line(1200, 900, 1200, 0));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(0, 0, 0, 900));\n  tempLevel.lines.push(new Line(220, 900, 220, 860));\n  tempLevel.lines.push(new Line(220, 860, 340, 860));\n  tempLevel.lines.push(new Line(340, 860, 340, 900));\n  tempLevel.lines.push(new Line(840, 900, 840, 600));\n  tempLevel.lines.push(new Line(840, 600, 920, 600));\n  tempLevel.lines.push(new Line(920, 600, 920, 900));\n  tempLevel.lines.push(new Line(1200, 900, 1200, 0));\n  tempLevel.lines.push(new Line(840, 0, 840, 40));\n  tempLevel.lines.push(new Line(840, 40, 920, 40));\n  tempLevel.lines.push(new Line(920, 40, 920, 0));\n  tempLevel.lines.push(new Line(840, 240, 840, 420));\n  tempLevel.lines.push(new Line(840, 420, 920, 420));\n  tempLevel.lines.push(new Line(920, 420, 920, 240));\n  tempLevel.lines.push(new Line(920, 240, 840, 240));\n  tempLevel.lines.push(new Line(580, 740, 580, 780));\n  tempLevel.lines.push(new Line(580, 780, 660, 780));\n  tempLevel.lines.push(new Line(660, 780, 660, 740));\n  tempLevel.lines.push(new Line(660, 740, 580, 740));\n  tempLevel.lines.push(new Line(400, 400, 400, 440));\n  tempLevel.lines.push(new Line(400, 440, 480, 440));\n  tempLevel.lines.push(new Line(480, 440, 480, 400));\n  tempLevel.lines.push(new Line(480, 400, 400, 400));\n  tempLevel.lines.push(new Line(280, 0, 280, 100));\n  tempLevel.lines.push(new Line(280, 100, 360, 100));\n  tempLevel.lines.push(new Line(360, 100, 360, 40));\n  tempLevel.lines.push(new Line(360, 40, 420, 40));\n  tempLevel.lines.push(new Line(420, 40, 420, 0));\n  tempLevel.lines.push(new Line(580, 440, 580, 540));\n  tempLevel.lines.push(new Line(580, 540, 600, 540));\n  tempLevel.lines.push(new Line(600, 540, 600, 440));\n  tempLevel.lines.push(new Line(600, 440, 580, 440));\n  GameState.levels.push(tempLevel);\n  tempLevel = new Level();\n  tempLevel.lines.push(new Line(420, 900, 420, 860));\n  tempLevel.lines.push(new Line(420, 860, 280, 860));\n  tempLevel.lines.push(new Line(280, 860, 280, 900));\n  tempLevel.lines.push(new Line(160, 820, 160, 860));\n  tempLevel.lines.push(new Line(160, 860, 120, 860));\n  tempLevel.lines.push(new Line(120, 860, 120, 820));\n  tempLevel.lines.push(new Line(120, 820, 160, 820));\n  tempLevel.lines.push(new Line(120, 460, 120, 500));\n  tempLevel.lines.push(new Line(120, 500, 160, 500));\n  tempLevel.lines.push(new Line(160, 500, 160, 460));\n  tempLevel.lines.push(new Line(160, 460, 120, 460));\n  tempLevel.lines.push(new Line(920, 900, 920, 380));\n  tempLevel.lines.push(new Line(920, 380, 1080, 380));\n  tempLevel.lines.push(new Line(1080, 380, 1080, 320));\n  tempLevel.lines.push(new Line(1080, 320, 1060, 320));\n  tempLevel.lines.push(new Line(1060, 320, 1060, 360));\n  tempLevel.lines.push(new Line(1060, 360, 280, 360));\n  tempLevel.lines.push(new Line(280, 360, 280, 660));\n  tempLevel.lines.push(new Line(280, 660, 840, 660));\n  tempLevel.lines.push(new Line(840, 660, 840, 900));\n  tempLevel.lines.push(new Line(1200, 900, 1200, 0));\n  tempLevel.lines.push(new Line(0, 900, 0, 0));\n  tempLevel.lines.push(new Line(0, 0, 1200, 0));\n  GameState.levels.push(tempLevel);\n  for (let i = 0; i < GameState.levels.length; i++) {\n    GameState.levels[i].levelImage = GameState.levelImages[i];\n    if (i >= 25 && i <= 31) {\n      GameState.levels[i].isBlizzardLevel = true;\n    }\n    if (i >= 36 && i <= 38) {\n      GameState.levels[i].isIceLevel = true;\n    }\n  }\n\n  // levels[0].coins.push(new Coin(100,100));\n  // levels[0].coins.push(new Coin( 198,449));\n  // levels[0].coins.push(new Coin( 1012,456));\n  // levels[0].coins.push(new Coin( 598,96));\n  // levels[0].coins.push(new Coin( 318,514));\n\n  // levels[0].coins.push(new Coin( 882,462));\n  // levels[0].coins.push(new Coin( 881,820));\n  // levels[0].coins.push(new Coin( 312,817));\n  // levels[0].coins.push(new Coin(x,y));\n\n  // levels[0].coins.push(new Coin( 1061,653));\n  GameState.levels[4].coins.push(new Coin(143, 160));\n  GameState.levels[5].coins.push(new Coin(801, 140));\n  GameState.levels[6].coins.push(new Coin(419, 541));\n  GameState.levels[8].coins.push(new Coin(780, 459));\n  GameState.levels[16].coins.push(new Coin(650, 570));\n  GameState.levels[16].coins.push(new Coin(195, 339));\n  GameState.levels[17].coins.push(new Coin(722, 648));\n  GameState.levels[17].coins.push(new Coin(1184, 781));\n  GameState.levels[17].coins.push(new Coin(1077, 297));\n  GameState.levels[24].coins.push(new Coin(971, 514));\n  GameState.levels[37].coins.push(new Coin(158, 666));\n  GameState.levels[36].coins.push(new Coin(721, 187));\n  GameState.levels[37].coins.push(new Coin(1042, 151));\n  GameState.levels[42].coins.push(new Coin(986, 306));\n\n  // levels[0].coins.push(new Coin( 595,30 , \"progress\" ));\n\n  GameState.levels[1].coins.push(new Coin(143, 148, \"progress\"));\n  GameState.levels[1].coins.push(new Coin(155, 142, \"progress\"));\n  GameState.levels[1].coins.push(new Coin(65, 148, \"progress\"));\n\n  GameState.levels[2].coins.push(new Coin(125, 187, \"progress\"));\n  GameState.levels[2].coins.push(new Coin(51, 183, \"progress\"));\n  GameState.levels[3].coins.push(new Coin(843, 125, \"progress\"));\n  GameState.levels[3].coins.push(new Coin(411, 170, \"progress\"));\n  GameState.levels[4].coins.push(new Coin(137, 173, \"progress\"));\n  GameState.levels[5].coins.push(new Coin(1122, 65, \"progress\"));\n  GameState.levels[5].coins.push(new Coin(1121, 151, \"progress\"));\n  GameState.levels[5].coins.push(new Coin(1101, 92, \"progress\"));\n  GameState.levels[6].coins.push(new Coin(349, 74, \"progress\"));\n  GameState.levels[7].coins.push(new Coin(154, 293, \"progress\"));\n  GameState.levels[8].coins.push(new Coin(602, 182, \"progress\"));\n  GameState.levels[12].coins.push(new Coin(1135, 37, \"progress\"));\n  GameState.levels[13].coins.push(new Coin(665, 193, \"progress\"));\n  GameState.levels[13].coins.push(new Coin(587, 194, \"progress\"));\n  GameState.levels[17].coins.push(new Coin(975, 147, \"progress\"));\n  GameState.levels[22].coins.push(new Coin(1139, 111, \"progress\"));\n  GameState.levels[36].coins.push(new Coin(686, 205, \"progress\"));\n  GameState.levels[37].coins.push(new Coin(1005, 181, \"progress\"));\n  GameState.levels[39].coins.push(new Coin(365, 187, \"progress\"));\n\n  GameState.levels[1].hasProgressionCoins = true;\n  GameState.levels[2].hasProgressionCoins = true;\n  GameState.levels[3].hasProgressionCoins = true;\n  GameState.levels[4].hasProgressionCoins = true;\n  GameState.levels[5].hasProgressionCoins = true;\n  GameState.levels[6].hasProgressionCoins = true;\n  GameState.levels[7].hasProgressionCoins = true;\n  GameState.levels[8].hasProgressionCoins = true;\n  GameState.levels[12].hasProgressionCoins = true;\n  GameState.levels[13].hasProgressionCoins = true;\n  GameState.levels[17].hasProgressionCoins = true;\n  GameState.levels[22].hasProgressionCoins = true;\n  GameState.levels[36].hasProgressionCoins = true;\n  GameState.levels[37].hasProgressionCoins = true;\n  GameState.levels[39].hasProgressionCoins = true;\n}\n\nexport { setupLevels };\n","function createModal(onClick) {\n  let inputValue = \"\";\n\n  const modalContainer = document.createElement(\"div\");\n  const input = document.createElement(\"input\");\n  const button = document.createElement(\"button\");\n  const text = document.createElement(\"p\");\n\n  modalContainer.style.position = \"absolute\";\n  modalContainer.style.width = \"250px\";\n  modalContainer.style.height = \"120px\";\n  modalContainer.style.inset = 0;\n  modalContainer.style.marginLeft = \"calc(50% - 120px)\";\n  modalContainer.style.marginTop = \"calc(320px)\";\n  modalContainer.style.display = \"flex\";\n  modalContainer.style.flexWrap = \"wrap\";\n\n  modalContainer.appendChild(text);\n  modalContainer.appendChild(input);\n  modalContainer.appendChild(button);\n\n  const hide = () => {\n    document.body.removeChild(modalContainer);\n  };\n\n  input.onchange = (event) => {\n    inputValue = event.target.value;\n  };\n  input.maxLength = 12;\n\n  button.onclick = (event) => {\n    onClick?.(inputValue, hide);\n  };\n\n  input.style.fontSize = \"18px\";\n  button.textContent = \"enter\";\n  text.textContent = \"Enter your name\";\n  text.style.color = \"white\";\n  text.style.fontFamily = \"ttf_alkhemikal\";\n  text.style.fontSize = \"40px\";\n  text.style.margin = 0;\n\n  document.body.appendChild(modalContainer);\n}\n\nconst getSessionId = () =>\n  new URL(window.location.href).pathname.match(/[^\\/]+/g)?.[0];\n\nfunction createChatWindow() {\n  const chatContainer = document.createElement(\"div\");\n  const input = document.createElement(\"input\");\n  const button = document.createElement(\"button\");\n  const text = document.createElement(\"p\");\n\n  // style\n  chatContainer.style.display = \"flex\";\n  chatContainer.style.flexDirection = \"column\";\n  chatContainer.style.gap = \"8px\";\n  chatContainer.style.position = \"absolute\";\n  chatContainer.style.top = 0;\n  chatContainer.style.right = 0;\n  chatContainer.style.background = \"red\";\n  chatContainer.style.width = \"320px\";\n  chatContainer.style.height = \"120px\";\n\n  document.body.appendChild(chatContainer);\n}\n\nexport { createModal, createChatWindow, getSessionId };\n","import { GameState } from \"./constants.js\";\n\nlet minJumpSpeed = 5;\nlet maxJumpSpeed = 22;\nlet maxJumpTimer = 30;\nlet jumpSpeedHorizontal = 8;\nlet terminalVelocity = 20;\nlet gravity = 0.6;\n\nlet runSpeed = 4;\nlet maxBlizzardForce = 0.3;\nlet blizzardMaxSpeedHoldTime = 150;\nlet blizzardAccelerationMagnitude = 0.003;\nlet blizzardImageSpeedMultiplier = 50;\n\nlet iceFrictionAcceleration = 0.2;\nlet playerIceRunAcceleration = 0.2;\n\nlet mutePlayers = false;\n\nclass PlayerState {\n  constructor() {\n    this.currentPos = window.createVector(\n      GameState.width / 2,\n      GameState.height - 200,\n    ); // this is the top left corner of the hitbox\n    this.currentSpeed = window.createVector(0, 0);\n    this.isOnGround = false;\n\n    this.blizzardForce = 0;\n    this.blizzardForceAccelerationDirection = 1;\n    this.maxBlizzardForceTimer = 0;\n    this.snowImagePosition = 0;\n\n    this.bestHeightReached = 0;\n    this.bestLevelReached = 0;\n    this.reachedHeightAtStepNo = 0;\n    this.bestLevelReachedOnActionNo = 0;\n\n    // this.brainActionNumber = 0;\n\n    this.currentLevelNo = 0;\n    this.jumpStartingHeight = 0;\n    this.facingRight = true;\n\n    this.isWaitingToStartAction = false;\n    this.actionStarted = false;\n  }\n\n  getStateFromPlayer(player) {\n    this.currentPos = player.currentPos.copy();\n    this.currentSpeed = player.currentSpeed.copy();\n    this.isOnGround = player.isOnGround;\n\n    this.blizzardForce = player.blizzardForce;\n    this.blizzardForceAccelerationDirection =\n      player.blizzardForceAccelerationDirection;\n    this.maxBlizzardForceTimer = player.maxBlizzardForceTimer;\n    this.snowImagePosition = player.snowImagePosition;\n\n    this.bestHeightReached = player.bestHeightReached;\n    this.bestLevelReached = player.bestLevelReached;\n    this.reachedHeightAtStepNo = player.reachedHeightAtStepNo;\n    this.bestLevelReachedOnActionNo = player.bestLevelReachedOnActionNo;\n    // this.brainActionNumber = player.brain.currentInstructionNumber;\n\n    this.currentLevelNo = player.currentLevelNo;\n    this.jumpStartingHeight = player.jumpStartingHeight;\n    this.facingRight = player.facingRight;\n\n    this.isWaitingToStartAction = player.isWaitingToStartAction;\n    this.actionStarted = player.actionStarted;\n  }\n\n  loadStateToPlayer(player) {\n    player.currentPos = this.currentPos.copy();\n    player.currentSpeed = this.currentSpeed.copy();\n    player.isOnGround = this.isOnGround;\n\n    player.blizzardForce = this.blizzardForce;\n    player.blizzardForceAccelerationDirection =\n      this.blizzardForceAccelerationDirection;\n    player.maxBlizzardForceTimer = this.maxBlizzardForceTimer;\n    player.snowImagePosition = this.snowImagePosition;\n\n    // player.blizzardForce = 0;\n    // player.blizzardForceAccelerationDirection  = 1;\n    // player.maxBlizzardForceTimer = 0;\n    // player.snowImagePosition = 0;\n\n    player.bestHeightReached = this.bestHeightReached;\n    player.bestLevelReached = this.bestLevelReached;\n    player.reachedHeightAtStepNo = this.reachedHeightAtStepNo;\n    player.bestLevelReachedOnActionNo = this.bestLevelReachedOnActionNo;\n    // player.brain.currentInstructionNumber = this.brainActionNumber;\n\n    player.currentLevelNo = this.currentLevelNo;\n    player.jumpStartingHeight = this.jumpStartingHeight;\n    player.facingRight = this.facingRight;\n\n    // player.isWaitingToStartAction = this.isWaitingToStartAction;\n    // player.actionStarted = this.actionStarted;\n  }\n\n  clone() {\n    let clone = new PlayerState();\n    clone.currentPos = this.currentPos.copy();\n    clone.currentSpeed = this.currentSpeed.copy();\n    clone.isOnGround = this.isOnGround;\n\n    clone.blizzardForce = this.blizzardForce;\n    clone.blizzardForceAccelerationDirection =\n      this.blizzardForceAccelerationDirection;\n    clone.maxBlizzardForceTimer = this.maxBlizzardForceTimer;\n    clone.snowImagePosition = this.snowImagePosition;\n\n    clone.bestHeightReached = this.bestHeightReached;\n    clone.bestLevelReached = this.bestLevelReached;\n    clone.reachedHeightAtStepNo = this.reachedHeightAtStepNo;\n    clone.bestLevelReachedOnActionNo = this.bestLevelReachedOnActionNo;\n    // clone.brainActionNumber = this.brainActionNumber;\n\n    clone.currentLevelNo = this.currentLevelNo;\n    clone.jumpStartingHeight = this.jumpStartingHeight;\n    clone.facingRight = this.facingRight;\n\n    // clone.isWaitingToStartAction = this.isWaitingToStartAction;\n    // clone.actionStarted = this.actionStarted;\n    return clone;\n  }\n}\n\nclass Player {\n  constructor(id, playerName) {\n    this.id = id;\n    this.playerName = playerName;\n\n    this.width = 50;\n    this.height = 65;\n\n    // this.currentPos = window.createVector(width / 2, height - 200); // this is the top left corner of the hitbox\n    this.currentPos = window.createVector(\n      GameState.width / 2,\n      GameState.height - 200,\n    ); // this is the top left corner of the hitbox\n    this.currentSpeed = window.createVector(0, 0);\n    this.isOnGround = false;\n\n    this.jumpHeld = false;\n    this.jumpTimer = 0;\n    this.leftHeld = false;\n    this.rightHeld = false;\n\n    this.facingRight = true;\n    this.hasBumped = false;\n    this.isRunning = false;\n    this.isSlidding = false;\n    this.currentRunIndex = 1;\n    this.runCycle = [\n      GameState.run1Image,\n      GameState.run1Image,\n      GameState.run1Image,\n      GameState.run1Image,\n      GameState.run1Image,\n      GameState.run1Image,\n      GameState.run1Image,\n      GameState.run1Image,\n      GameState.run1Image,\n      GameState.run1Image,\n      GameState.run1Image,\n      GameState.run1Image,\n      GameState.run1Image,\n      GameState.run2Image,\n      GameState.run2Image,\n      GameState.run2Image,\n      GameState.run2Image,\n      GameState.run2Image,\n      GameState.run2Image,\n      GameState.run3Image,\n      GameState.run3Image,\n      GameState.run3Image,\n      GameState.run3Image,\n      GameState.run3Image,\n      GameState.run3Image,\n      GameState.run3Image,\n      GameState.run3Image,\n      GameState.run3Image,\n      GameState.run3Image,\n      GameState.run3Image,\n      GameState.run3Image,\n      GameState.run3Image,\n      GameState.run2Image,\n      GameState.run2Image,\n      GameState.run2Image,\n      GameState.run2Image,\n      GameState.run2Image,\n      GameState.run2Image,\n    ];\n    this.sliddingRight = false;\n\n    // this.currentLevel = null;\n    this.currentLevelNo = 0;\n\n    this.jumpStartingHeight = 0;\n    this.hasFallen = false;\n\n    this.blizzardForce = 0;\n    this.blizzardForceAccelerationDirection = 1;\n    this.maxBlizzardForceTimer = 0;\n    this.snowImagePosition = 0;\n\n    // ai shit\n    this.aiActionTimer = 0;\n    this.aiActionMaxTime = 0;\n    this.isWaitingToStartAction = false;\n    this.actionStarted = false;\n    // this.brain = new Brain(startingPlayerActions);\n    this.currentAction = null;\n\n    this.playersDead = false;\n\n    this.previousSpeed = window.createVector(0, 0);\n\n    this.bestHeightReached = 0;\n    this.bestLevelReached = 0;\n    this.reachedHeightAtStepNo = 0;\n    this.bestLevelReachedOnActionNo = 0;\n    //\n    // this.Constants.jumpSound = loadSound('sounds/jump.mp3')\n    // this.Constants.fallSound = loadSound('sounds/fall.mp3')\n    // Constants.bumpSound = loadSound('sounds/bump.mp3')\n    // Constants.landSound = loadSound('sounds/land.mp3')\n\n    this.fitness = 0;\n    this.hasFinishedInstructions = false;\n    this.fellToPreviousLevel = false;\n    this.fellOnActionNo = 0;\n    this.playerStateAtStartOfBestLevel = new PlayerState();\n    this.getNewPlayerStateAtEndOfUpdate = false;\n\n    this.parentReachedBestLevelAtActionNo = 0;\n    this.numberOfCoinsPickedUp = 0;\n    this.coinsPickedUpIndexes = [];\n\n    this.maxCollisionChecks = 20;\n    this.currentNumberOfCollisionChecks = 0;\n\n    this.progressionCoinPickedUp = false;\n  }\n\n  ResetPlayer() {\n    this.currentPos = window.createVector(\n      GameState.width / 2,\n      GameState.height - 200,\n    ); // this is the top left corner of the hitbox\n    this.currentSpeed = window.createVector(0, 0);\n    this.isOnGround = false;\n\n    this.jumpHeld = false;\n    this.jumpTimer = 0;\n    this.leftHeld = false;\n    this.rightHeld = false;\n\n    this.facingRight = true;\n    this.hasBumped = false;\n    this.isRunning = false;\n    this.isSlidding = false;\n    this.currentRunIndex = 1;\n    this.sliddingRight = false;\n\n    // this.currentLevel = null;\n    this.currentLevelNo = 0;\n\n    this.jumpStartingHeight = 0;\n    this.hasFallen = false;\n\n    this.blizzardForce = 0;\n    this.blizzardForceAccelerationDirection = 1;\n    this.maxBlizzardForceTimer = 0;\n    this.snowImagePosition = 0;\n\n    // ai shit\n    this.aiActionTimer = 0;\n    this.aiActionMaxTime = 0;\n    this.isWaitingToStartAction = false;\n    this.actionStarted = false;\n\n    // this.brain.currentInstructionNumber = 0;\n    this.currentAction = null;\n\n    this.playersDead = false;\n    this.previousSpeed = window.createVector(0, 0);\n    this.bestHeightReached = 0;\n    this.reachedHeightAtStepNo = 0;\n\n    this.fitness = 0;\n    this.hasFinishedInstructions = false;\n  }\n\n  clone() {\n    let clone = new Player();\n    // clone.brain = this.brain.clone();\n    // clone.playerStateAtStartOfBestLevel =\n    //   this.playerStateAtStartOfBestLevel.clone();\n    // clone.brain.parentReachedBestLevelAtActionNo =\n    //   this.bestLevelReachedOnActionNo;\n    return clone;\n  }\n\n  loadStartOfBestLevelPlayerState() {\n    this.playerStateAtStartOfBestLevel.loadStateToPlayer(this);\n  }\n\n  CalculateFitness() {\n    // current best fitness max just including height is 640,000, getting a coin has to be the most important thing so\n    let coinValue = 500000;\n    let heightThisLevel =\n      this.bestHeightReached - GameState.height * this.bestLevelReached;\n    this.fitness =\n      heightThisLevel * heightThisLevel +\n      coinValue * this.numberOfCoinsPickedUp;\n  }\n\n  Update() {\n    if (this.playersDead) {\n      return;\n    }\n\n    let currentLines = GameState.levels[this.currentLevelNo].lines;\n    this.UpdatePlayerSlide(currentLines);\n    this.ApplyGravity();\n    this.ApplyBlizzardForce();\n    this.UpdatePlayerRun(currentLines);\n    this.currentPos.add(this.currentSpeed);\n    this.previousSpeed = this.currentSpeed.copy();\n\n    this.currentNumberOfCollisionChecks = 0;\n    this.CheckCollisions(currentLines);\n    this.UpdateJumpTimer();\n    this.CheckForLevelChange();\n    // this.CheckForCoinCollisions();\n\n    if (this.getNewPlayerStateAtEndOfUpdate) {\n      if (this.currentLevelNo !== 37) {\n        this.playerStateAtStartOfBestLevel.getStateFromPlayer(this);\n      }\n      this.getNewPlayerStateAtEndOfUpdate = false;\n    }\n\n    if (this.jumpHeld && this.jumpTimer >= maxJumpTimer) {\n      this.jumpHeld = false;\n      this.Jump();\n    }\n  }\n\n  RenderPlayerName() {\n    const [x, y] = [this.currentPos.x, this.currentPos.y];\n    if (!x || !y || !this.playerName) {\n      return;\n    }\n    window.textFont(GameState.font);\n    window.textSize(24);\n    window.fill(255, 255, 255);\n\n    const midX = (x + (x + this.width)) / 2;\n    const topY = y - this.height + 12;\n    window.text(\n      this.playerName,\n      midX - this.playerName.length * 5,\n      topY,\n      50,\n      65,\n    );\n  }\n\n  ApplyGravity() {\n    if (!this.isOnGround) {\n      if (this.isSlidding) {\n        this.currentSpeed.y = window.min(\n          this.currentSpeed.y + gravity * 0.5,\n          terminalVelocity * 0.5,\n        );\n        if (this.sliddingRight) {\n          this.currentSpeed.x = window.min(\n            this.currentSpeed.x + gravity * 0.5,\n            terminalVelocity * 0.5,\n          );\n        } else {\n          this.currentSpeed.x = window.max(\n            this.currentSpeed.x - gravity * 0.5,\n            -terminalVelocity * 0.5,\n          );\n        }\n      } else {\n        this.currentSpeed.y = window.min(\n          this.currentSpeed.y + gravity,\n          terminalVelocity,\n        );\n      }\n    }\n  }\n\n  ApplyBlizzardForce() {\n    // if(!Constants.levels[this.currentLevelNo].isBlizzardLevel)\n    //     return;\n\n    if (window.abs(this.blizzardForce) >= maxBlizzardForce) {\n      this.maxBlizzardForceTimer += 1;\n      if (this.maxBlizzardForceTimer > blizzardMaxSpeedHoldTime) {\n        this.blizzardForceAccelerationDirection *= -1;\n        this.maxBlizzardForceTimer = 0;\n      }\n    }\n\n    this.blizzardForce +=\n      this.blizzardForceAccelerationDirection * blizzardAccelerationMagnitude;\n    // if the blizzard is faster than max blizzard force\n    if (window.abs(this.blizzardForce) > maxBlizzardForce) {\n      this.blizzardForce =\n        maxBlizzardForce * this.blizzardForceAccelerationDirection;\n    }\n\n    this.snowImagePosition += this.blizzardForce * blizzardImageSpeedMultiplier;\n\n    if (\n      !this.isOnGround &&\n      GameState.levels[this.currentLevelNo].isBlizzardLevel\n    ) {\n      this.currentSpeed.x += this.blizzardForce;\n    }\n  }\n\n  CheckCollisions(currentLines) {\n    let collidedLines = [];\n    for (let i = 0; i < currentLines.length; i++) {\n      if (this.IsCollidingWithLine(currentLines[i])) {\n        collidedLines.push(currentLines[i]);\n      }\n    }\n\n    let chosenLine = this.GetPriorityCollision(collidedLines);\n\n    let potentialLanding = false;\n    if (chosenLine == null) return;\n\n    if (chosenLine.isHorizontal) {\n      if (this.IsMovingDown()) {\n        // so the player has potentially landed\n        //correct the position first then player has landed\n        this.currentPos.y = chosenLine.y1 - this.height;\n\n        if (collidedLines.length > 1) {\n          potentialLanding = true;\n          if (GameState.levels[this.currentLevelNo].isIceLevel) {\n            this.currentSpeed.y = 0;\n            if (this.IsMovingRight()) {\n              this.currentSpeed.x -= iceFrictionAcceleration;\n            } else {\n              this.currentSpeed.x += iceFrictionAcceleration;\n            }\n          } else {\n            this.currentSpeed = window.createVector(0, 0);\n          }\n          // print(\"potentail landing on nooooooo\")\n        } else {\n          this.playerLanded();\n        }\n      } else {\n        // if moving up then we've hit a roof and we bounce off\n\n        this.currentSpeed.y = 0 - this.currentSpeed.y / 2;\n        // ok we gonna need to snap this shit\n        this.currentPos.y = chosenLine.y1;\n        if (!mutePlayers || testingSinglePlayer) {\n          GameState.bumpSound.playMode(\"sustain\");\n          GameState.bumpSound.play();\n        }\n      }\n    } else if (chosenLine.isVertical) {\n      if (this.IsMovingRight()) {\n        this.currentPos.x = chosenLine.x1 - this.width;\n      } else if (this.IsMovingLeft()) {\n        this.currentPos.x = chosenLine.x1;\n      } else {\n        //ok so fuck\n        //this.bad = true\n        // this means we've hit a wall but we arent moving left or right\n        // meaning we prioritised the floor first which stopped our velocity\n        // so we need a variable to store the speed we had before any transions were made\n        if (this.previousSpeed.x > 0) {\n          this.currentPos.x = chosenLine.x1 - this.width;\n        } else {\n          this.currentPos.x = chosenLine.x1;\n        }\n      }\n      this.currentSpeed.x = 0 - this.currentSpeed.x / 2;\n      if (!this.isOnGround) {\n        this.hasBumped = true;\n        if (!mutePlayers || testingSinglePlayer) {\n          GameState.bumpSound.playMode(\"sustain\");\n          GameState.bumpSound.play();\n        }\n      }\n    } else {\n      this.isSlidding = true;\n      this.hasBumped = true;\n\n      if (chosenLine.diagonalCollisionInfo.collisionPoints.length === 2) {\n        let midpoint =\n          chosenLine.diagonalCollisionInfo.collisionPoints[0].copy();\n        midpoint.add(\n          chosenLine.diagonalCollisionInfo.collisionPoints[1].copy(),\n        );\n        midpoint.mult(0.5);\n\n        let left = chosenLine.diagonalCollisionInfo.leftSideOfPlayerCollided;\n        let right = chosenLine.diagonalCollisionInfo.rightSideOfPlayerCollided;\n        let top = chosenLine.diagonalCollisionInfo.topSideOfPlayerCollided;\n        let bottom =\n          chosenLine.diagonalCollisionInfo.bottomSideOfPlayerCollided;\n\n        let playerCornerPos = null;\n\n        if (top && left) {\n          // print(\"t and l\")\n          playerCornerPos = this.currentPos.copy();\n        }\n        if (top && right) {\n          // print(\"t and r\")\n          playerCornerPos = this.currentPos.copy();\n          playerCornerPos.x += this.width;\n        }\n        if (bottom && left) {\n          // print(\"b and l\")\n          playerCornerPos = this.currentPos.copy();\n          playerCornerPos.y += this.height;\n          this.sliddingRight = true;\n        }\n        if (bottom && right) {\n          // print(\"b and r\")\n          playerCornerPos = this.currentPos.copy();\n          playerCornerPos.y += this.height;\n          playerCornerPos.x += this.width;\n          this.sliddingRight = false;\n        }\n        let correctionX = 0;\n        let correctionY = 0;\n\n        if (playerCornerPos === null) {\n          // print(\"fuck\");\n          // print(left, right, top, bottom);\n          playerCornerPos = this.currentPos.copy();\n\n          if (this.IsMovingDown()) {\n            playerCornerPos.y += this.height;\n          }\n          if (this.IsMovingRight()) {\n            playerCornerPos.x += this.width;\n          }\n        }\n        correctionX = midpoint.x - playerCornerPos.x;\n        correctionY = midpoint.y - playerCornerPos.y;\n\n        this.currentPos.x += correctionX;\n        this.currentPos.y += correctionY;\n        // this.currentPos.x += correctionX>0 ? 1:-1;\n        // this.currentPos.y += correctionY>0 ? 1:-1;\n\n        //get the current speed based on the dot product of the current veloctiy with the line\n        let lineVector = window.createVector(\n          chosenLine.x2 - chosenLine.x1,\n          chosenLine.y2 - chosenLine.y1,\n        );\n        lineVector.normalize();\n        // print(lineVector);\n\n        let speedMagnitude = window.p5.Vector.dot(\n          this.currentSpeed,\n          lineVector,\n        );\n        // print(this.currentSpeed)\n        this.currentSpeed = window.p5.Vector.mult(lineVector, speedMagnitude);\n        // print(speedMagnitude,lineVector,this.currentSpeed)\n        // this.currentSpeed.x = 0.5*gravity;\n        // this.currentSpeed.y = 0.5*gravity;\n        if (top) {\n          this.currentSpeed = window.createVector(0, 0);\n          this.isSlidding = false;\n        }\n      } else {\n        let left = chosenLine.diagonalCollisionInfo.leftSideOfPlayerCollided;\n        let right = chosenLine.diagonalCollisionInfo.rightSideOfPlayerCollided;\n        let top = chosenLine.diagonalCollisionInfo.topSideOfPlayerCollided;\n        let bottom =\n          chosenLine.diagonalCollisionInfo.bottomSideOfPlayerCollided;\n\n        let playerCornerPos = null;\n        if (top) {\n          // bounce off the point as if it were horizontal\n          // print(\"top only\");\n          let closestPointY = window.max(chosenLine.y1, chosenLine.y2);\n          this.currentPos.y = closestPointY + 1;\n          this.currentSpeed.y = 0 - this.currentSpeed.y / 2;\n        }\n        if (bottom) {\n          //treat like floor\n          // print(\"bottome only\");\n          let closestPointY = window.min(chosenLine.y1, chosenLine.y2);\n          // this.isOnGround = true\n          this.currentSpeed = window.createVector(0, 0);\n          // ok we gonna need to snap this shit\n          this.currentPos.y = closestPointY - this.height - 1;\n        }\n        if (left) {\n          // treat like a left wall\n          // print('left only')\n          this.currentPos.x = window.max(chosenLine.x1, chosenLine.x2) + 1;\n          if (this.IsMovingLeft())\n            this.currentSpeed.x = 0 - this.currentSpeed.x / 2;\n          if (!this.isOnGround) this.hasBumped = true;\n        }\n        if (right) {\n          // treat like a right wall\n          // print(\"right only\")\n          this.currentPos.x =\n            window.min(chosenLine.x1, chosenLine.x2) - this.width - 1;\n          if (this.IsMovingRight())\n            this.currentSpeed.x = 0 - this.currentSpeed.x / 2;\n\n          if (!this.isOnGround) this.hasBumped = true;\n        }\n      }\n    }\n    if (collidedLines.length > 1) {\n      // print(chosenLine)\n      this.currentNumberOfCollisionChecks += 1;\n      if (this.currentNumberOfCollisionChecks > this.maxCollisionChecks) {\n        this.hasFinishedInstructions = true;\n        this.playersDead = true;\n      } else {\n        this.CheckCollisions(currentLines);\n      }\n\n      //ok so this is gonna need some splaining.\n      // so if we've \"landed\" but it wasnt the last correction then we need to check again if the dude has landed\n      // just incase the corrections have moved him off the surface\n      if (potentialLanding) {\n        if (this.IsPlayerOnGround(currentLines)) {\n          this.playerLanded();\n        }\n      }\n    }\n  }\n\n  Show() {\n    if (this.playersDead) return;\n    window.push();\n\n    this.RenderPlayerName();\n\n    //if on the previous level and is up the top, then show\n    // if (this.currentLevelNo === population.showingLevelNo - 1) {\n    //   if (this.currentPos.y < this.height) {\n    //     translate(0, height);\n    //   } else {\n    //     pop();\n    //     return;\n    //   }\n    // }\n\n    window.translate(this.currentPos.x, this.currentPos.y);\n\n    // if (this.jumpHeld) {\n    //     // this.height = this.height / 2\n    //     // translate(0, this.height)\n    //     image(squatImage,-20,-35 );\n    //\n    // }else{\n\n    let imageToUse = this.GetImageToUseBasedOnState();\n\n    if (!this.facingRight) {\n      window.push();\n      window.scale(-1, 1);\n      if (this.hasBumped) {\n        window.image(imageToUse, -70, -30);\n      } else if (\n        imageToUse == GameState.jumpImage ||\n        imageToUse == GameState.fallImage\n      ) {\n        window.image(imageToUse, -70, -28);\n      } else {\n        window.image(imageToUse, -70, -35);\n      }\n      window.pop();\n    } else {\n      if (this.hasBumped) {\n        window.image(imageToUse, -20, -30);\n      } else if (\n        imageToUse == GameState.jumpImage ||\n        imageToUse == GameState.fallImage\n      ) {\n        window.image(imageToUse, -20, -28);\n      } else {\n        window.image(imageToUse, -20, -35);\n      }\n    }\n    //\n    // fill(255, 0, 0);\n    // noFill();\n    // stroke(255,0,0);\n    // strokeWeight(2);\n    // // noStroke()\n    // rect(0, 0, this.width, this.height);\n\n    // if (this.jumpHeld) {\n    //     this.height = this.height * 2\n    // }\n    window.pop();\n\n    //show snow\n    if (\n      GameState.levels[this.currentLevelNo].isBlizzardLevel &&\n      (!alreadyShowingSnow || testingSinglePlayer)\n    ) {\n      let snowDrawPosition = this.snowImagePosition;\n      while (snowDrawPosition <= 0) {\n        snowDrawPosition += GameState.width;\n      }\n      snowDrawPosition = snowDrawPosition % GameState.width;\n\n      // let snowYPosition = (frameCount/2) % height;\n      window.image(snowImage, snowDrawPosition, 0);\n      window.image(snowImage, snowDrawPosition - GameState.width, 0);\n      // image(snowImage, snowDrawPosition, snowYPosition- height);\n      // image(snowImage, snowDrawPosition - width, snowYPosition- height);\n      alreadyShowingSnow = true;\n    }\n  }\n\n  Jump() {\n    if (!this.isOnGround) {\n      return;\n    }\n\n    let verticalJumpSpeed = map(\n      this.jumpTimer,\n      0,\n      maxJumpTimer,\n      minJumpSpeed,\n      maxJumpSpeed,\n    );\n    // print(this.jumpTimer,minJumpSpeed,maxJumpSpeed,verticalJumpSpeed )\n    if (this.leftHeld) {\n      this.currentSpeed = window.createVector(\n        -jumpSpeedHorizontal,\n        -verticalJumpSpeed,\n      );\n      this.facingRight = false;\n    } else if (this.rightHeld) {\n      this.currentSpeed = window.createVector(\n        jumpSpeedHorizontal,\n        -verticalJumpSpeed,\n      );\n      this.facingRight = true;\n    } else {\n      this.currentSpeed = window.createVector(0, -verticalJumpSpeed);\n    }\n    this.hasFallen = false;\n    this.isOnGround = false;\n    // print(this.jumpTimer);\n    this.jumpTimer = 0;\n    this.jumpStartingHeight =\n      GameState.height -\n      this.currentPos.y +\n      GameState.height * this.currentLevelNo;\n    if (!mutePlayers || testingSinglePlayer) {\n      GameState.jumpSound.playMode(\"sustain\");\n      GameState.jumpSound.play();\n    }\n  }\n\n  // to determine if we are colliding with any walls or shit we need to do some collision detection\n  // this is done by taking the collision of the 4 lines that make up the hitbox\n\n  IsCollidingWithLine(l) {\n    if (l.isHorizontal) {\n      var isRectWithinLineX =\n        (l.x1 < this.currentPos.x && this.currentPos.x < l.x2) ||\n        (l.x1 < this.currentPos.x + this.width &&\n          this.currentPos.x + this.width < l.x2) ||\n        (this.currentPos.x < l.x1 && l.x1 < this.currentPos.x + this.width) ||\n        (this.currentPos.x < l.x2 && l.x2 < this.currentPos.x + this.width);\n      var isRectWithinLineY =\n        this.currentPos.y < l.y1 && l.y1 < this.currentPos.y + this.height;\n      // if (isRectWithinLineX && isRectWithinLineY) {\n      //     print(this.currentPos.x, l.x1, l.x2)\n      //     print(isRectWithinLineX, isRectWithinLineY)\n      // }\n      return isRectWithinLineX && isRectWithinLineY;\n    } else if (l.isVertical) {\n      isRectWithinLineY =\n        (l.y1 < this.currentPos.y && this.currentPos.y < l.y2) ||\n        (l.y1 < this.currentPos.y + this.height &&\n          this.currentPos.y + this.height < l.y2) ||\n        (this.currentPos.y < l.y1 && l.y1 < this.currentPos.y + this.height) ||\n        (this.currentPos.y < l.y2 && l.y2 < this.currentPos.y + this.height);\n      isRectWithinLineX =\n        this.currentPos.x < l.x1 && l.x1 < this.currentPos.x + this.width;\n      // if (isRectWithinLineX && isRectWithinLineY) {\n      //     print(this.currentPos.x, l.x1, l.x2)\n      //     print(isRectWithinLineX, isRectWithinLineY)\n      // }\n      return isRectWithinLineX && isRectWithinLineY;\n    } else {\n      // ok so we need to check each side of the\n      // wait i just realized there is no way that only the l or r side is touching the digonal\n      //wait there might be hold on\n      // ok jsut check all of them\n\n      let tl = this.currentPos.copy();\n      let tr = tl.copy();\n      tr.x += this.width;\n      let bl = tl.copy();\n      bl.y += this.height - 1;\n      let br = bl.copy();\n      br.x += this.width;\n\n      let leftCollision = AreLinesColliding(\n        tl.x,\n        tl.y,\n        bl.x,\n        bl.y,\n        l.x1,\n        l.y1,\n        l.x2,\n        l.y2,\n      );\n      let rightCollision = AreLinesColliding(\n        tr.x,\n        tr.y,\n        br.x,\n        br.y,\n        l.x1,\n        l.y1,\n        l.x2,\n        l.y2,\n      );\n      let topCollision = AreLinesColliding(\n        tl.x,\n        tl.y,\n        tr.x,\n        tr.y,\n        l.x1,\n        l.y1,\n        l.x2,\n        l.y2,\n      );\n      let bottomCollision = AreLinesColliding(\n        bl.x,\n        bl.y,\n        br.x,\n        br.y,\n        l.x1,\n        l.y1,\n        l.x2,\n        l.y2,\n      );\n\n      if (\n        leftCollision[0] ||\n        rightCollision[0] ||\n        topCollision[0] ||\n        bottomCollision[0]\n      ) {\n        let collisionInfo = new DiagonalCollisionInfo();\n        collisionInfo.leftSideOfPlayerCollided = leftCollision[0];\n        collisionInfo.rightSideOfPlayerCollided = rightCollision[0];\n        collisionInfo.topSideOfPlayerCollided = topCollision[0];\n        collisionInfo.bottomSideOfPlayerCollided = bottomCollision[0];\n\n        if (leftCollision[0])\n          collisionInfo.collisionPoints.push(\n            window.createVector(leftCollision[1], leftCollision[2]),\n          );\n        if (rightCollision[0])\n          collisionInfo.collisionPoints.push(\n            window.createVector(rightCollision[1], rightCollision[2]),\n          );\n        if (topCollision[0])\n          collisionInfo.collisionPoints.push(\n            window.createVector(topCollision[1], topCollision[2]),\n          );\n        if (bottomCollision[0])\n          collisionInfo.collisionPoints.push(\n            window.createVector(bottomCollision[1], bottomCollision[2]),\n          );\n\n        l.diagonalCollisionInfo = collisionInfo;\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  UpdateJumpTimer() {\n    if (this.isOnGround && this.jumpHeld && this.jumpTimer < maxJumpTimer) {\n      this.jumpTimer += 1;\n    }\n  }\n\n  IsMovingUp() {\n    return this.currentSpeed.y < 0;\n  }\n\n  IsMovingDown() {\n    return this.currentSpeed.y > 0;\n  }\n\n  IsMovingLeft() {\n    return this.currentSpeed.x < 0;\n  }\n\n  IsMovingRight() {\n    return this.currentSpeed.x > 0;\n  }\n\n  GetImageToUseBasedOnState() {\n    if (this.jumpHeld && this.isOnGround) return GameState.squatImage;\n    if (this.hasFallen) return GameState.fallenImage;\n    if (this.hasBumped) return GameState.oofImage;\n    if (this.currentSpeed.y < 0) return GameState.jumpImage;\n    if (this.isRunning) {\n      this.currentRunIndex += 1;\n      if (this.currentRunIndex >= this.runCycle.length)\n        this.currentRunIndex = 0;\n      return this.runCycle[this.currentRunIndex];\n    }\n\n    if (this.isOnGround) return GameState.idleImage;\n    return GameState.fallImage;\n  }\n\n  UpdatePlayerSlide(currentLines) {\n    if (this.isSlidding) {\n      if (!this.IsPlayerOnDiagonal(currentLines)) {\n        // print(\"NOT SLIDDING\")\n        this.isSlidding = false;\n      }\n    }\n  }\n\n  UpdatePlayerRun(currentLines) {\n    this.isRunning = false;\n    let runAllowed =\n      !GameState.levels[this.currentLevelNo].isBlizzardLevel ||\n      this.currentLevelNo === 31 ||\n      this.currentLevelNo == 25;\n    if (this.isOnGround) {\n      if (!this.IsPlayerOnGround(currentLines)) {\n        this.isOnGround = false;\n        return;\n      }\n      if (!this.jumpHeld) {\n        if (this.rightHeld && runAllowed) {\n          this.hasFallen = false;\n          this.isRunning = true;\n          this.facingRight = true;\n          if (!GameState.levels[this.currentLevelNo].isIceLevel) {\n            this.currentSpeed = window.createVector(runSpeed, 0);\n          } else {\n            this.currentSpeed.x += playerIceRunAcceleration;\n            this.currentSpeed.x = window.min(runSpeed, this.currentSpeed.x);\n          }\n        } else if (this.leftHeld && runAllowed) {\n          this.hasFallen = false;\n          this.isRunning = true;\n          this.facingRight = false;\n          if (!GameState.levels[this.currentLevelNo].isIceLevel) {\n            this.currentSpeed = window.createVector(-runSpeed, 0);\n          } else {\n            this.currentSpeed.x -= playerIceRunAcceleration;\n            this.currentSpeed.x = window.max(0 - runSpeed, this.currentSpeed.x);\n          }\n        } else {\n          if (!GameState.levels[this.currentLevelNo].isIceLevel) {\n            this.currentSpeed = window.createVector(0, 0);\n          } else {\n            this.currentSpeed.y = 0;\n            if (this.IsMovingRight()) {\n              this.currentSpeed.x -= iceFrictionAcceleration;\n            } else {\n              this.currentSpeed.x += iceFrictionAcceleration;\n            }\n            if (window.abs(this.currentSpeed.x) <= iceFrictionAcceleration) {\n              this.currentSpeed.x = 0;\n            }\n          }\n        }\n      } else {\n        if (!GameState.levels[this.currentLevelNo].isIceLevel) {\n          this.currentSpeed = window.createVector(0, 0);\n        } else {\n          this.currentSpeed.y = 0;\n          if (this.IsMovingRight()) {\n            this.currentSpeed.x -= iceFrictionAcceleration;\n          } else {\n            this.currentSpeed.x += iceFrictionAcceleration;\n          }\n          if (window.abs(this.currentSpeed.x) <= iceFrictionAcceleration) {\n            this.currentSpeed.x = 0;\n          }\n        }\n      }\n    }\n  }\n\n  IsPlayerOnGround(currentLines) {\n    this.currentPos.y += 1;\n    for (let i = 0; i < currentLines.length; i++) {\n      if (\n        currentLines[i].isHorizontal &&\n        this.IsCollidingWithLine(currentLines[i])\n      ) {\n        this.currentPos.y -= 1;\n        return true;\n      }\n    }\n    this.currentPos.y -= 1;\n    return false;\n  }\n\n  IsPlayerOnDiagonal(currentLines) {\n    this.currentPos.y += 5;\n    for (let i = 0; i < currentLines.length; i++) {\n      if (\n        currentLines[i].isDiagonal &&\n        this.IsCollidingWithLine(currentLines[i])\n      ) {\n        this.currentPos.y -= 5;\n        return true;\n      }\n    }\n    this.currentPos.y -= 5;\n    return false;\n  }\n\n  GetPriorityCollision(collidedLines) {\n    // FIRST EDGE CASES BECAUse I SUCK AT CODING\n    //ok so this is gonna need some explaining, i know there is probably a better fix but i think this will work\n    //ok so if we are going up and then we hit a verticle and a horizontal and if the midpoint of the vert is lower then\n    // we need to do the verticle one first because that should be blocking the horizontal one\n\n    if (collidedLines.length === 2) {\n      let vert = null;\n      let horiz = null;\n      let diag = null;\n      if (collidedLines[0].isVertical) vert = collidedLines[0];\n      if (collidedLines[0].isHorizontal) horiz = collidedLines[0];\n      if (collidedLines[0].isDiagonal) diag = collidedLines[0];\n      if (collidedLines[1].isVertical) vert = collidedLines[1];\n      if (collidedLines[1].isHorizontal) horiz = collidedLines[1];\n      if (collidedLines[1].isDiagonal) diag = collidedLines[1];\n\n      if (vert != null && horiz != null) {\n        if (this.IsMovingUp()) {\n          if (vert.midPoint.y > horiz.midPoint.y) {\n            return vert;\n          } else {\n            // return horiz;\n          }\n        } else {\n          // if(vert.midPoint.y < horiz.midPoint.y ){\n          //     return vert;\n          // }else{\n          //     // return horiz;\n          // }\n        }\n      }\n      if (horiz != null && diag != null) {\n        // if (this.IsMovingDown()) {\n        //if the digonal one is below the horizontal then always prefer the horiz\n        if (diag.midPoint.y > horiz.midPoint.y) {\n          return horiz;\n        }\n      }\n    }\n\n    // check the inverse of the velocity to see if the corrections fit in the range\n    let maxAllowedXCorrection = 0 - this.currentSpeed.x;\n    let maxAllowedYCorrection = 0 - this.currentSpeed.y;\n\n    //if multiple collisions detected use the one that requires the least correction\n\n    let minCorrection = 10000;\n    let maxCorrection = 0;\n\n    let chosenLine = null;\n    if (collidedLines.length === 0) return null;\n\n    chosenLine = collidedLines[0];\n\n    if (collidedLines.length > 1) {\n      for (let l of collidedLines) {\n        let directedCorrection = window.createVector(0, 0);\n        let correction = 10000;\n        if (l.isHorizontal) {\n          if (this.IsMovingDown()) {\n            directedCorrection.y = l.y1 - (this.currentPos.y + this.height);\n\n            correction = window.abs(directedCorrection);\n            correction = window.abs(this.currentPos.y - (l.y1 - this.height));\n          } else {\n            // if moving up then we've hit a roof and we bounce off\n            directedCorrection.y = l.y1 - this.currentPos.y;\n            correction = window.abs(this.currentPos.y - l.y1);\n          }\n        } else if (l.isVertical) {\n          if (this.IsMovingRight()) {\n            directedCorrection.x = l.x1 - (this.currentPos.x + this.width);\n            correction = window.abs(this.currentPos.x - (l.x1 - this.width));\n          } else {\n            directedCorrection.x = l.x1 - this.currentPos.x;\n\n            correction = window.abs(this.currentPos.x - l.x1);\n          }\n        } else {\n          //this bitch diagonal\n          // so we're moving the point to the diagonal linees\n          // if we get the midpoint of the 2 intersection points then we gucci\n          // if there is only 1 intersection point then just treat it as a wall/ roof\n          if (l.diagonalCollisionInfo.collisionPoints.length === 2) {\n            let midpoint = l.diagonalCollisionInfo.collisionPoints[0].copy();\n            midpoint.add(l.diagonalCollisionInfo.collisionPoints[1].copy());\n            midpoint.mult(0.5);\n\n            let left = l.diagonalCollisionInfo.leftSideOfPlayerCollided;\n            let right = l.diagonalCollisionInfo.rightSideOfPlayerCollided;\n            let top = l.diagonalCollisionInfo.topSideOfPlayerCollided;\n            let bottom = l.diagonalCollisionInfo.bottomSideOfPlayerCollided;\n\n            let playerCornerPos = null;\n            if (top && left) {\n              playerCornerPos = this.currentPos.copy();\n            }\n            if (top && right) {\n              playerCornerPos = this.currentPos.copy();\n              playerCornerPos.x += this.width;\n            }\n            if (bottom && left) {\n              playerCornerPos = this.currentPos.copy();\n              playerCornerPos.y += this.height;\n            }\n            if (bottom && right) {\n              playerCornerPos = this.currentPos.copy();\n              playerCornerPos.y += this.height;\n              playerCornerPos.x += this.width;\n            }\n\n            if (playerCornerPos === null) {\n              // print(\"fuck\");\n              // print(left, right, top, bottom);\n              playerCornerPos = this.currentPos.copy();\n\n              if (this.IsMovingDown()) {\n                playerCornerPos.y += this.height;\n              }\n              if (this.IsMovingRight()) {\n                playerCornerPos.x += this.width;\n              }\n            }\n\n            directedCorrection.x = midpoint.x - playerCornerPos.x;\n            directedCorrection.y = midpoint.y - playerCornerPos.y;\n            correction = window.dist(\n              playerCornerPos.x,\n              playerCornerPos.y,\n              midpoint.x,\n              midpoint.y,\n            );\n          } else {\n            let left = l.diagonalCollisionInfo.leftSideOfPlayerCollided;\n            let right = l.diagonalCollisionInfo.rightSideOfPlayerCollided;\n            let top = l.diagonalCollisionInfo.topSideOfPlayerCollided;\n            let bottom = l.diagonalCollisionInfo.bottomSideOfPlayerCollided;\n\n            let playerCornerPos = null;\n            if (top) {\n              // bounce off the point as if it were horizontal\n              let closestPointY = window.max(l.y1, l.y2);\n              directedCorrection.y = closestPointY - this.currentPos.y;\n\n              correction = window.abs(this.currentPos.y - closestPointY);\n            }\n            if (bottom) {\n              //treat like floor\n              let closestPointY = window.min(l.y1, l.y2);\n              directedCorrection.y =\n                closestPointY - (this.currentPos.y + this.height);\n              correction = window.abs(\n                this.currentPos.y + this.height - closestPointY,\n              );\n            }\n            if (left) {\n              // treat like a left wall\n              let closestPointX = window.max(l.x1, l.x2);\n              directedCorrection.x = closestPointX - this.currentPos.x;\n              correction = window.abs(this.currentPos.x - closestPointX);\n            }\n            if (right) {\n              // treat like a left wall\n              let closestPointX = window.min(l.x1, l.x2);\n              directedCorrection.x =\n                closestPointX - (this.currentPos.x + this.width);\n              correction = window.abs(\n                this.currentPos.x + this.width - closestPointX,\n              );\n            }\n          }\n        }\n\n        function isBetween(a, b1, b2) {\n          return (b1 <= a && a <= b2) || (b2 <= a && a <= b1);\n        }\n\n        if (\n          isBetween(directedCorrection.x, 0, maxAllowedXCorrection) &&\n          isBetween(directedCorrection.y, 0, maxAllowedYCorrection)\n        ) {\n          // correction = abs(directedCorrection)\n          if (correction < minCorrection) {\n            minCorrection = correction;\n            chosenLine = l;\n          }\n        }\n      }\n    }\n    return chosenLine;\n  }\n\n  CheckForLevelChange() {\n    if (this.currentPos.y < -this.height) {\n      //we are at the top of the screen\n      this.currentLevelNo += 1;\n      this.currentPos.y += GameState.height;\n    } else if (this.currentPos.y > GameState.height - this.height) {\n      if (this.currentLevelNo === 0) {\n        //oh no\n        // print(\"fuck me hes goin under\")\n        this.currentLevelNo = 1; //lol fixed\n        this.playersDead = true;\n        this.hasFinishedInstructions = true;\n      }\n      this.currentLevelNo -= 1;\n      this.currentPos.y -= GameState.height;\n\n      if (\n        !this.hasFinishedInstructions &&\n        this.currentLevelNo < this.bestLevelReached - 1\n      ) {\n        this.fellToPreviousLevel = true;\n        // this.fellOnActionNo = this.brain.currentInstructionNumber;\n        this.hasFinishedInstructions = true;\n      }\n    }\n  }\n\n  StartCurrentAction() {\n    this.aiActionMaxTime = window.floor(this.currentAction.holdTime * 30);\n    this.aiActionTimer = 0;\n    if (this.currentAction.isJump) {\n      this.jumpHeld = true;\n    }\n    if (this.currentAction.xDirection === -1) {\n      this.leftHeld = true;\n      this.rightHeld = false;\n    } else if (this.currentAction.xDirection === 1) {\n      this.leftHeld = false;\n      this.rightHeld = true;\n    }\n  }\n\n  EndCurrentAction() {\n    if (this.currentAction.isJump) {\n      this.jumpHeld = false;\n      this.Jump();\n    }\n    this.leftHeld = false;\n    this.rightHeld = false;\n    this.isWaitingToStartAction = false;\n  }\n\n  GetGlobalHeight() {\n    return (\n      GameState.height -\n      this.currentPos.y +\n      GameState.height * this.currentLevelNo\n    );\n  }\n\n  playerLanded() {\n    // if moving down then weve landed\n    this.isOnGround = true;\n    // if were on an ice level then we slide instead\n    if (GameState.levels[this.currentLevelNo].isIceLevel) {\n      this.currentSpeed.y = 0;\n      if (this.IsMovingRight()) {\n        this.currentSpeed.x -= iceFrictionAcceleration;\n      } else {\n        this.currentSpeed.x += iceFrictionAcceleration;\n      }\n    } else {\n      this.currentSpeed = window.createVector(0, 0);\n    }\n\n    this.isSlidding = false;\n    this.hasBumped = false;\n\n    if (\n      this.jumpStartingHeight - GameState.height / 2 >\n      GameState.height -\n        this.currentPos.y +\n        GameState.height * this.currentLevelNo\n    ) {\n      this.hasFallen = true;\n    }\n\n    if (this.GetGlobalHeight() > this.bestHeightReached) {\n      this.bestHeightReached = this.GetGlobalHeight();\n      // this.reachedHeightAtStepNo = this.brain.currentInstructionNumber;\n\n      if (this.bestLevelReached < this.currentLevelNo) {\n        this.bestLevelReached = this.currentLevelNo;\n        // this.bestLevelReachedOnActionNo = this.brain.currentInstructionNumber;\n        // this.playerStateAtStartOfBestLevel.getStateFromPlayer(this);\n        this.getNewPlayerStateAtEndOfUpdate = true;\n\n        //setup coins\n        this.numberOfCoinsPickedUp = 0;\n        this.progressionCoinPickedUp = false;\n        if (!GameState.levels[this.currentLevelNo].hasProgressionCoins) {\n          this.progressionCoinPickedUp = true;\n        }\n        this.coinsPickedUpIndexes = [];\n      }\n    }\n\n    // if the ai fell to a previous level then stop the actions and record when it happened\n    if (\n      this.currentLevelNo < this.bestLevelReached &&\n      this.currentLevelNo !== 23 &&\n      !this.hasFinishedInstructions\n    ) {\n      this.fellToPreviousLevel = true;\n      // this.fellOnActionNo = this.brain.currentInstructionNumber;\n      this.hasFinishedInstructions = true;\n    }\n\n    if (!mutePlayers || testingSinglePlayer) {\n      if (this.hasFallen) {\n        GameState.fallSound.playMode(\"sustain\");\n        GameState.fallSound.play();\n      } else {\n        GameState.landSound.playMode(\"sustain\");\n        GameState.landSound.play();\n      }\n    }\n  }\n\n  CheckForCoinCollisions() {\n    if (this.currentLevelNo < this.bestLevelReached) {\n      return;\n    }\n    let currentLevel = GameState.levels[this.currentLevelNo];\n    for (let i = 0; i < currentLevel.coins.length; i++) {\n      if (!this.coinsPickedUpIndexes.includes(i)) {\n        if (currentLevel.coins[i].collidesWithPlayer(this)) {\n          if (currentLevel.coins[i].type == \"reward\") {\n            if (this.isOnGround) {\n              this.coinsPickedUpIndexes.push(i);\n              this.numberOfCoinsPickedUp += 1;\n              // print(\"COLLISION COIN THING\");\n            }\n          } else {\n            this.coinsPickedUpIndexes.push(i);\n            this.numberOfCoinsPickedUp += 0; // dont increase coins picked up\n            this.progressionCoinPickedUp = true;\n            // print(\"COLLISION Progress coin\");\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction AreLinesColliding(x1, y1, x2, y2, x3, y3, x4, y4) {\n  let uA =\n    ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) /\n    ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));\n  let uB =\n    ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) /\n    ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));\n  if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\n    let intersectionX = x1 + uA * (x2 - x1);\n    let intersectionY = y1 + uA * (y2 - y1);\n    return [true, intersectionX, intersectionY];\n  }\n  return [false, 0, 0];\n}\n\nexport { Player };\n","import { ClientConnection } from \"./connection\";\nimport { setupLevels } from \"./LevelSetupFunction\";\nimport { GameState } from \"./constants.js\";\nimport { Line } from \"./Line\";\nimport { createModal, getSessionId } from \"./utils\";\nimport { Player } from \"./Player.js\";\n\nfunction preload() {\n  GameState.backgroundImage = window.loadImage(\n    \"assets/images/levelImages/1.png\",\n  );\n  GameState.idleImage = window.loadImage(\"assets/images/poses/idle.png\");\n  GameState.squatImage = window.loadImage(\"assets/images/poses/squat.png\");\n  GameState.jumpImage = window.loadImage(\"assets/images/poses/jump.png\");\n  GameState.oofImage = window.loadImage(\"assets/images/poses/oof.png\");\n  GameState.run1Image = window.loadImage(\"assets/images/poses/run1.png\");\n  GameState.run2Image = window.loadImage(\"assets/images/poses/run2.png\");\n  GameState.run3Image = window.loadImage(\"assets/images/poses/run3.png\");\n  GameState.fallenImage = window.loadImage(\"assets/images/poses/fallen.png\");\n  GameState.fallImage = window.loadImage(\"assets/images/poses/fall.png\");\n\n  GameState.snowImage = window.loadImage(\"assets/images/snow3.png\");\n\n  for (let i = 1; i <= 43; i++) {\n    GameState.levelImages.push(\n      window.loadImage(\"assets/images/levelImages/\" + i + \".png\"),\n    );\n  }\n\n  GameState.jumpSound = window.loadSound(\"assets/sounds/jump.mp3\");\n  GameState.fallSound = window.loadSound(\"assets/sounds/fall.mp3\");\n  GameState.bumpSound = window.loadSound(\"assets/sounds/bump.mp3\");\n  GameState.landSound = window.loadSound(\"assets/sounds/land.mp3\");\n\n  GameState.font = window.loadFont(\"assets/fonts/ttf_alkhemikal.ttf\");\n}\n\n// Spawn main Constants.player & joined players on connection\nconst onSessionJoin = (conn, connType, msg) => {\n  const clientId = conn.getClientId();\n  const pName = msg.Data?.PlayerName;\n\n  let sessionId = getSessionId();\n  if (!sessionId && msg.SessionId) {\n    sessionId = msg.SessionId;\n    window.location.href = `${window.location.href}${sessionId}`;\n  }\n\n  if (connType === \"start\" && !GameState.player) {\n    GameState.player = new Player(clientId, pName);\n\n    const connections = msg.Data?.Connections;\n    for (const [connectionId, connectionName] of Object.entries(connections)) {\n      if (connectionId === clientId) {\n        continue;\n      }\n      GameState.joinedPlayers.add(new Player(connectionId, connectionName));\n    }\n\n    GameState.streamInterval = setInterval(\n      () => {\n        if (!conn.connected) {\n          clearInterval(GameState.streamInterval);\n          return;\n        }\n\n        const data = {\n          x: GameState.player.currentPos.x,\n          y: GameState.player.currentPos.y,\n          leftHeld: GameState.player.leftHeld,\n          rightHeld: GameState.player.rightHeld,\n          jumpHeld: GameState.player.jumpHeld,\n          facingRight: GameState.player.facingRight,\n          currentLevelNo: GameState.player.currentLevelNo,\n          isOnGround: GameState.player.isOnGround,\n          isSlidding: GameState.player.isSlidding,\n          currentSpeedX: GameState.player.currentSpeed.x,\n          currentSpeedY: GameState.player.currentSpeed.y,\n          sliddingRight: GameState.player.sliddingRight,\n          hasFallen: GameState.player.hasFallen,\n        };\n        conn.send({ Type: \"action\", Data: data });\n      },\n      // send 25 times per second\n      40,\n    );\n\n    return;\n  }\n\n  if ([...GameState.joinedPlayers].every((p) => p.id !== msg.ClientId)) {\n    GameState.joinedPlayers.add(new Player(msg.ClientId, pName));\n  }\n};\n\n// Remove disconnected players\nconst onSessionQuit = (clientId) => {\n  GameState.joinedPlayers.forEach((p) => {\n    if (p.id === clientId || !clientId) {\n      GameState.joinedPlayers.delete(p);\n    }\n  });\n};\n\n// Update joined players state\nconst onActionReceive = (msg) => {\n  const id = msg.ClientId;\n  const data = msg.Data;\n\n  const updatePlayer = [...GameState.joinedPlayers].find((p) => p.id === id);\n  if (!updatePlayer) {\n    return;\n  }\n  updatePlayer.currentPos = window.createVector(data.x, data.y);\n  updatePlayer.rightHeld = data.rightHeld;\n  updatePlayer.leftHeld = data.leftHeld;\n  updatePlayer.jumpHeld = data.jumpHeld;\n  updatePlayer.facingRight = data.facingRight;\n  updatePlayer.currentLevelNo = data.currentLevelNo;\n  updatePlayer.isOnGround = data.isOnGround;\n  updatePlayer.isSlidding = data.isSlidding;\n  updatePlayer.currentSpeed.x = data.currentSpeedX;\n  updatePlayer.currentSpeed.y = data.currentSpeedY;\n  updatePlayer.sliddingRight = data.sliddingRight;\n  updatePlayer.hasFallen = data.hasFallen;\n};\n\nconst onConnected = (conn) => {\n  const sessionSlug = getSessionId();\n  // types: info, connect, disconnect, action, session\n  const connectMessage = {\n    Type: \"connect\",\n    SessionId: sessionSlug?.length > 0 ? sessionSlug : undefined,\n    Data: {\n      SessionType: sessionSlug?.length > 0 ? \"connect\" : \"create\",\n      PlayerName: GameState.playerName,\n    },\n  };\n  conn.send(connectMessage);\n};\n\nfunction setupCanvas() {\n  GameState.canvas = window.createCanvas(1200, 950);\n  GameState.canvas.parent(\"canvas\");\n  GameState.width = GameState.canvas.width;\n  GameState.height = GameState.canvas.height - 50;\n}\n\nfunction setup() {\n  createModal((inputValue, hide) => {\n    if (\n      !inputValue ||\n      typeof inputValue !== \"string\" ||\n      inputValue.length < 1\n    ) {\n      return;\n    }\n\n    hide();\n    GameState.playerName = inputValue.replace(/ /g, \"\");\n    GameState.connection = new ClientConnection({\n      onConnected,\n      onSessionJoin,\n      onSessionQuit,\n      onActionReceive,\n    });\n  });\n  // createChatWindow();\n  setupCanvas();\n\n  setupLevels();\n  GameState.jumpSound.playMode(\"sustain\");\n  GameState.fallSound.playMode(\"sustain\");\n  GameState.bumpSound.playMode(\"sustain\");\n  GameState.landSound.playMode(\"sustain\");\n}\n\nfunction drawMousePosition() {\n  let snappedX = mouseX - (mouseX % 20);\n  let snappedY = mouseY - (mouseY % 20);\n  window.push();\n\n  window.fill(255, 0, 0);\n  window.noStroke();\n  window.ellipse(snappedX, snappedY, 5);\n\n  if (GameState.mousePos1 != null) {\n    window.stroke(255, 0, 0);\n    window.strokeWeight(5);\n    window.line(\n      GameState.mousePos1.x,\n      GameState.mousePos1.y,\n      snappedX,\n      snappedY,\n    );\n  }\n\n  window.pop();\n}\n\nfunction draw() {\n  window.background(10);\n  window.push();\n  window.translate(0, 50);\n\n  if (GameState.player) {\n    window.image(\n      GameState.levels[GameState.player.currentLevelNo].levelImage,\n      0,\n      0,\n    );\n    GameState.levels[GameState.player.currentLevelNo].show();\n    GameState.player.Update();\n    GameState.player.Show();\n  } else {\n    // something fails here - levels levelImage - undefined\n    window.image(GameState.levels[0]?.levelImage, 0, 0);\n    GameState.levels[0].show();\n  }\n\n  GameState.joinedPlayers.forEach((p) => {\n    p.Update();\n\n    // show joined Constants.player only on the same level\n    if (GameState.player?.currentLevelNo === p.currentLevelNo) {\n      p.Show();\n    }\n  });\n\n  if (GameState.showingLines || GameState.creatingLines) showLines();\n\n  if (GameState.creatingLines) drawMousePosition();\n\n  if (window.frameCount % 15 === 0) {\n    GameState.previousFrameRate = window.floor(window.getFrameRate());\n  }\n\n  window.pop();\n\n  window.fill(0);\n  window.noStroke();\n  window.rect(0, 0, GameState.width, 50);\n\n  window.textSize(32);\n  window.textFont(GameState.font);\n  window.fill(255, 255, 255);\n  // text(\"FPS: \" + previousFrameRate, width - 160, 35);\n  window.text(\n    `Session: ${GameState.connection ? GameState.connection.getSessionId() : \"no\"}`,\n    20,\n    35,\n  );\n  const isConnected = !!GameState.connection?.getIsConnected();\n  window.fill(isConnected ? 0 : 255, isConnected ? 255 : 0, 0);\n  window.text(\n    isConnected ? \"Connected\" : \"Disconnected\",\n    GameState.width - 160,\n    35,\n  );\n}\n\nfunction showLevel(levelNumberToShow) {\n  GameState.levels[levelNumberToShow].show();\n}\n\nfunction showLines() {\n  if (GameState.creatingLines) {\n    for (let l of GameState.lines) {\n      l.Show();\n    }\n  } else {\n    for (let l of GameState.levels[GameState.player.currentLevelNo].lines) {\n      l.Show();\n    }\n  }\n}\n\nfunction keyPressed() {\n  if (!GameState.player) {\n    return;\n  }\n\n  switch (key) {\n    case \" \":\n      GameState.player.jumpHeld = true;\n      break;\n    case \"R\":\n      GameState.player.ResetPlayer();\n      GameState.joinedPlayers.forEach((p) => {\n        p.ResetPlayer();\n      });\n      break;\n    case \"S\":\n      GameState.bumpSound.stop();\n      GameState.jumpSound.stop();\n      GameState.landSound.stop();\n      GameState.fallSound.stop();\n      break;\n  }\n\n  switch (keyCode) {\n    case LEFT_ARROW:\n      GameState.player.leftHeld = true;\n      break;\n    case RIGHT_ARROW:\n      GameState.player.rightHeld = true;\n      break;\n  }\n}\n\nfunction keyReleased() {\n  if (!GameState.player) {\n    return;\n  }\n\n  switch (key) {\n    // case \"B\":\n    //   replayingBestPlayer = true;\n    //   cloneOfBestPlayer =\n    //     population.cloneOfBestPlayerFromPreviousGeneration.clone();\n    //   evolationSpeed = 1;\n    //   mutePlayers = false;\n    //   break;\n\n    case \" \":\n      if (!GameState.creatingLines && GameState.player.jumpHeld) {\n        GameState.player.jumpHeld = false;\n        GameState.player.Jump();\n      }\n      break;\n    case \"R\":\n      if (GameState.creatingLines) {\n        GameState.lines = [];\n        GameState.linesString = \"\";\n        GameState.mousePos1 = null;\n        GameState.mousePos2 = null;\n      }\n      break;\n    case \"N\":\n      return; // disable\n      if (creatingLines) {\n        levelNumber += 1;\n        linesString += \"\\nlevels.push(tempLevel);\";\n        linesString += \"\\ntempLevel = new Level();\";\n        print(linesString);\n        lines = [];\n        linesString = \"\";\n        mousePos1 = null;\n        mousePos2 = null;\n      } else {\n        GameState.player.currentLevelNo += 1;\n        print(GameState.player.currentLevelNo);\n      }\n      break;\n    case \"D\":\n      if (GameState.creatingLines) {\n        GameState.mousePos1 = null;\n        GameState.mousePos2 = null;\n      }\n  }\n\n  switch (keyCode) {\n    case LEFT_ARROW:\n      GameState.player.leftHeld = false;\n      break;\n    case RIGHT_ARROW:\n      GameState.player.rightHeld = false;\n      break;\n    case DOWN_ARROW:\n      GameState.evolationSpeed = window.constrain(\n        GameState.evolationSpeed - 1,\n        0,\n        50,\n      );\n      break;\n    case UP_ARROW:\n      GameState.evolationSpeed = window.constrain(\n        GameState.evolationSpeed + 1,\n        0,\n        50,\n      );\n      // print(evolationSpeed);\n      break;\n  }\n}\n\nfunction mouseClicked() {\n  if (GameState.creatingLines) {\n    let snappedX = window.mouseX - (window.mouseX % 20);\n    let snappedY = window.mouseY - (window.mouseY % 20);\n    if (GameState.mousePos1 == null) {\n      GameState.mousePos1 = window.createVector(snappedX, snappedY);\n    } else {\n      GameState.mousePos2 = window.createVector(snappedX, snappedY);\n      // print('tempLevel.lines.push(new Line(' + mousePos1.x + ',' + mousePos1.y + ',' + mousePos2.x + ',' + mousePos2.y + '));');\n      lines.push(\n        new Line(\n          GameState.mousePos1.x,\n          GameState.mousePos1.y,\n          GameState.mousePos2.x,\n          GameState.mousePos2.y,\n        ),\n      );\n      linesString +=\n        \"\\ntempLevel.lines.push(new Line(\" +\n        GameState.mousePos1.x +\n        \",\" +\n        GameState.mousePos1.y +\n        \",\" +\n        GameState.mousePos2.x +\n        \",\" +\n        GameState.mousePos2.y +\n        \"));\";\n      GameState.mousePos1 = null;\n      GameState.mousePos2 = null;\n    }\n  } else if (\n    GameState.placingPlayer &&\n    !GameState.playerPlaced &&\n    GameState.player\n  ) {\n    GameState.playerPlaced = true;\n    GameState.player.currentPos = window.createVector(\n      window.mouseX,\n      window.mouseY,\n    );\n  }\n}\n\n// p5 lib workaround\nwindow.preload = preload;\nwindow.setupCanvas = setupCanvas;\nwindow.setup = setup;\nwindow.drawMousePosition = drawMousePosition;\nwindow.draw = draw;\nwindow.showLevel = showLevel;\nwindow.showLines = showLines;\nwindow.keyPressed = keyPressed;\nwindow.keyReleased = keyReleased;\nwindow.mouseClicked = mouseClicked;\n"],"names":["onSessionJoin","onSessionQuit","onConnected","onActionReceive","_a","DiagonalCollisionInfo","isBetween"],"mappings":"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;AAC7C,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,MAAM,GAAG,CAAC;AACnD,YAAU,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,MAAM,GAAG,CAAC;AACnD,YAAU,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,MAAM,GAAG,CAAC;AACnD,YAAU,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,MAAM,GAAG,CAAC;AACnD,YAAU,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,MAAM,CAAC,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IA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KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,MAAM,GAAG,CAAC;AAClD,YAAU,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,MAAM,GAAG,CAAC;AACnD,YAAU,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,KAAK,GAAG,CAAC;AAClD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,MAAM,GAAG,CAAC;AAClD,YAAU,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,MAAM,GAAG,CAAC;AACn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K,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,MAAM,GAAG,CAAC;AAClD,YAAU,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,MAAM,GAAG,CAAC;AACnD,YAAU,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,MAAM,GAAG,CAAC;AACnD,YAAU,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,MAAM,GAAG,CAAC;AACnD,YAAU,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,MAAM,GAAG,CAAC;AACnD,YAAU,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,MAAM,GAAG,CAAC;AACnD,YAAU,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,MAAM,CAAC,CAAC;AACjD,YAAU,M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jD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,MAAM,GAAG,CAAC;AAClD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,K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,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,MAAM,GAAG,CAAC;AACnD,YAAU,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,MAAM,GAAG,CAAC;AACnD,YAAU,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,MAAM,GAAG,CAAC;AACnD,YAAU,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,MAAM,GAAG,CAAC;AACnD,YAAU,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,MAAM,GAAG,CAAC;AACnD,YAAU,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,MAAM,GAAG,CAAC;AACnD,YAAU,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,MAAM,CAAC,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAA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jD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,MAAM,GAAG,CAAC;AAClD,YAAU,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,MAAM,GAAG,CAAC;AACnD,YAAU,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,MAAM,GAAG,CAAC;AACnD,YAAU,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,MAAM,GAAG,CAAC;AACnD,YAAU,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,MAAM,CAAC,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,K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AK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,MAAM,GAAG,CAAC;AAClD,YAAU,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,MAAM,GAAG,CAAC;AACnD,YAAU,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,KAAK,GAAG,CAAC;AAClD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,OAAO,KAAK,SAAS;AAC/B,cAAY,IAAI,MAAO;AACvB,YAAU,MAAM,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,CAAC;AAC/C,YAAU,MAAM,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,CAAC;AAC/C,YAAU,MAAM,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,CAAC;AAC/C,YAAU,MAAM,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,CAAC;AAC/C,YAAU,MAAM,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,CAAC,CAAC;AAC7C,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,GAAG,KAAK,GAAG,CAAC;AAC/C,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,CAAC,CAAC;AAC/C,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,MAAM,GAAG,CAAC;AACnD,YAAU,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,MAAM,GAAG,CAAC;AACnD,YAAU,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,MAAM,GAAG,CAAC;AACnD,YAAU,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,MAAM,GAAG,CA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AAChD,YAAU,MAAM,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,CAAC,CAAC;AAC7C,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACjD,YAAU,MAAM,KAAK,IAA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"}